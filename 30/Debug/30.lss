
30.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000054  00800100  00000f32  00000fc6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f32  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800154  00800154  0000101a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000101a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001078  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  000010b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001332  00000000  00000000  0000115c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a69  00000000  00000000  0000248e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000080e  00000000  00000000  00002ef7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000018c  00000000  00000000  00003708  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000551  00000000  00000000  00003894  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000092c  00000000  00000000  00003de5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00004711  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	d8 c2       	rjmp	.+1456   	; 0x5fa <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e3       	ldi	r30, 0x32	; 50
  a0:	ff e0       	ldi	r31, 0x0F	; 15
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 35       	cpi	r26, 0x54	; 84
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e5       	ldi	r26, 0x54	; 84
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	af 35       	cpi	r26, 0x5F	; 95
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	f6 d0       	rcall	.+492    	; 0x2b0 <main>
  c4:	34 c7       	rjmp	.+3688   	; 0xf2e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <ADC_set>:
		LCD_data(*str++);
}

void LCD_setcursor(char col, char row)
{
	LCD_command(0x80 | col * 0x40 + row);
  c8:	80 e8       	ldi	r24, 0x80	; 128
  ca:	86 b9       	out	0x06, r24	; 6
  cc:	86 b1       	in	r24, 0x06	; 6
  ce:	87 60       	ori	r24, 0x07	; 7
  d0:	86 b9       	out	0x06, r24	; 6
  d2:	08 95       	ret

000000d4 <ADC_read>:
  d4:	90 e4       	ldi	r25, 0x40	; 64
  d6:	97 b9       	out	0x07, r25	; 7
  d8:	97 b1       	in	r25, 0x07	; 7
  da:	89 2b       	or	r24, r25
  dc:	87 b9       	out	0x07, r24	; 7
  de:	36 9a       	sbi	0x06, 6	; 6
  e0:	36 99       	sbic	0x06, 6	; 6
  e2:	fe cf       	rjmp	.-4      	; 0xe0 <ADC_read+0xc>
  e4:	84 b1       	in	r24, 0x04	; 4
  e6:	95 b1       	in	r25, 0x05	; 5
  e8:	08 95       	ret

000000ea <temp_sensor_read>:
  ea:	ee df       	rcall	.-36     	; 0xc8 <ADC_set>
  ec:	80 e0       	ldi	r24, 0x00	; 0
  ee:	f2 df       	rcall	.-28     	; 0xd4 <ADC_read>
  f0:	bc 01       	movw	r22, r24
  f2:	99 0f       	add	r25, r25
  f4:	88 0b       	sbc	r24, r24
  f6:	99 0b       	sbc	r25, r25
  f8:	1f d3       	rcall	.+1598   	; 0x738 <__floatsisf>
  fa:	20 e0       	ldi	r18, 0x00	; 0
  fc:	30 e0       	ldi	r19, 0x00	; 0
  fe:	40 ea       	ldi	r20, 0xA0	; 160
 100:	50 e4       	ldi	r21, 0x40	; 64
 102:	aa d3       	rcall	.+1876   	; 0x858 <__mulsf3>
 104:	20 e0       	ldi	r18, 0x00	; 0
 106:	30 ec       	ldi	r19, 0xC0	; 192
 108:	4f e7       	ldi	r20, 0x7F	; 127
 10a:	54 e4       	ldi	r21, 0x44	; 68
 10c:	ab d2       	rcall	.+1366   	; 0x664 <__divsf3>
 10e:	20 e0       	ldi	r18, 0x00	; 0
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	48 ec       	ldi	r20, 0xC8	; 200
 114:	52 e4       	ldi	r21, 0x42	; 66
 116:	a0 c3       	rjmp	.+1856   	; 0x858 <__mulsf3>

00000118 <gas_sensor_read>:
 118:	d7 df       	rcall	.-82     	; 0xc8 <ADC_set>
 11a:	82 e0       	ldi	r24, 0x02	; 2
 11c:	db df       	rcall	.-74     	; 0xd4 <ADC_read>
 11e:	bc 01       	movw	r22, r24
 120:	99 0f       	add	r25, r25
 122:	88 0b       	sbc	r24, r24
 124:	99 0b       	sbc	r25, r25
 126:	08 d3       	rcall	.+1552   	; 0x738 <__floatsisf>
 128:	20 e0       	ldi	r18, 0x00	; 0
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	40 ea       	ldi	r20, 0xA0	; 160
 12e:	50 e4       	ldi	r21, 0x40	; 64
 130:	93 d3       	rcall	.+1830   	; 0x858 <__mulsf3>
 132:	20 e0       	ldi	r18, 0x00	; 0
 134:	30 ec       	ldi	r19, 0xC0	; 192
 136:	4f e7       	ldi	r20, 0x7F	; 127
 138:	54 e4       	ldi	r21, 0x44	; 68
 13a:	94 c2       	rjmp	.+1320   	; 0x664 <__divsf3>

0000013c <fire_sensor_read>:
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	01 99       	sbic	0x00, 1	; 0
 142:	02 c0       	rjmp	.+4      	; 0x148 <fire_sensor_read+0xc>
 144:	80 e0       	ldi	r24, 0x00	; 0
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	08 95       	ret

0000014a <uart_init>:
 14a:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 14e:	89 b9       	out	0x09, r24	; 9
 150:	88 e1       	ldi	r24, 0x18	; 24
 152:	8a b9       	out	0x0a, r24	; 10
 154:	08 95       	ret

00000156 <uart_write>:
 156:	5d 9b       	sbis	0x0b, 5	; 11
 158:	fe cf       	rjmp	.-4      	; 0x156 <uart_write>
 15a:	8c b9       	out	0x0c, r24	; 12
 15c:	08 95       	ret

0000015e <uart_string>:
 15e:	cf 93       	push	r28
 160:	df 93       	push	r29
 162:	ec 01       	movw	r28, r24
 164:	88 81       	ld	r24, Y
 166:	88 23       	and	r24, r24
 168:	29 f0       	breq	.+10     	; 0x174 <uart_string+0x16>
 16a:	21 96       	adiw	r28, 0x01	; 1
 16c:	f4 df       	rcall	.-24     	; 0x156 <uart_write>
 16e:	89 91       	ld	r24, Y+
 170:	81 11       	cpse	r24, r1
 172:	fc cf       	rjmp	.-8      	; 0x16c <uart_string+0xe>
 174:	df 91       	pop	r29
 176:	cf 91       	pop	r28
 178:	08 95       	ret

0000017a <LCD_command>:
 17a:	98 2f       	mov	r25, r24
 17c:	90 7f       	andi	r25, 0xF0	; 240
 17e:	9b bb       	out	0x1b, r25	; 27
 180:	d8 98       	cbi	0x1b, 0	; 27
 182:	d9 98       	cbi	0x1b, 1	; 27
 184:	da 9a       	sbi	0x1b, 2	; 27
 186:	25 e0       	ldi	r18, 0x05	; 5
 188:	2a 95       	dec	r18
 18a:	f1 f7       	brne	.-4      	; 0x188 <LCD_command+0xe>
 18c:	00 00       	nop
 18e:	da 98       	cbi	0x1b, 2	; 27
 190:	20 e1       	ldi	r18, 0x10	; 16
 192:	82 9f       	mul	r24, r18
 194:	c0 01       	movw	r24, r0
 196:	11 24       	eor	r1, r1
 198:	8b bb       	out	0x1b, r24	; 27
 19a:	d8 98       	cbi	0x1b, 0	; 27
 19c:	d9 98       	cbi	0x1b, 1	; 27
 19e:	da 9a       	sbi	0x1b, 2	; 27
 1a0:	85 e0       	ldi	r24, 0x05	; 5
 1a2:	8a 95       	dec	r24
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <LCD_command+0x28>
 1a6:	00 00       	nop
 1a8:	da 98       	cbi	0x1b, 2	; 27
 1aa:	08 95       	ret

000001ac <LCD_init>:
 1ac:	2f ef       	ldi	r18, 0xFF	; 255
 1ae:	83 ef       	ldi	r24, 0xF3	; 243
 1b0:	91 e0       	ldi	r25, 0x01	; 1
 1b2:	21 50       	subi	r18, 0x01	; 1
 1b4:	80 40       	sbci	r24, 0x00	; 0
 1b6:	90 40       	sbci	r25, 0x00	; 0
 1b8:	e1 f7       	brne	.-8      	; 0x1b2 <LCD_init+0x6>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <LCD_init+0x10>
 1bc:	00 00       	nop
 1be:	88 e2       	ldi	r24, 0x28	; 40
 1c0:	dc df       	rcall	.-72     	; 0x17a <LCD_command>
 1c2:	87 ec       	ldi	r24, 0xC7	; 199
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <LCD_init+0x1a>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <LCD_init+0x20>
 1cc:	00 00       	nop
 1ce:	8c e0       	ldi	r24, 0x0C	; 12
 1d0:	d4 df       	rcall	.-88     	; 0x17a <LCD_command>
 1d2:	87 ec       	ldi	r24, 0xC7	; 199
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	01 97       	sbiw	r24, 0x01	; 1
 1d8:	f1 f7       	brne	.-4      	; 0x1d6 <LCD_init+0x2a>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <LCD_init+0x30>
 1dc:	00 00       	nop
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	cc df       	rcall	.-104    	; 0x17a <LCD_command>
 1e2:	8f e3       	ldi	r24, 0x3F	; 63
 1e4:	9f e1       	ldi	r25, 0x1F	; 31
 1e6:	01 97       	sbiw	r24, 0x01	; 1
 1e8:	f1 f7       	brne	.-4      	; 0x1e6 <LCD_init+0x3a>
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <LCD_init+0x40>
 1ec:	00 00       	nop
 1ee:	86 e0       	ldi	r24, 0x06	; 6
 1f0:	c4 df       	rcall	.-120    	; 0x17a <LCD_command>
 1f2:	87 ec       	ldi	r24, 0xC7	; 199
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	01 97       	sbiw	r24, 0x01	; 1
 1f8:	f1 f7       	brne	.-4      	; 0x1f6 <LCD_init+0x4a>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <LCD_init+0x50>
 1fc:	00 00       	nop
 1fe:	08 95       	ret

00000200 <LCD_data>:
 200:	ef e8       	ldi	r30, 0x8F	; 143
 202:	f1 e0       	ldi	r31, 0x01	; 1
 204:	31 97       	sbiw	r30, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <LCD_data+0x4>
 208:	00 c0       	rjmp	.+0      	; 0x20a <LCD_data+0xa>
 20a:	00 00       	nop
 20c:	98 2f       	mov	r25, r24
 20e:	90 7f       	andi	r25, 0xF0	; 240
 210:	9b bb       	out	0x1b, r25	; 27
 212:	d8 9a       	sbi	0x1b, 0	; 27
 214:	d9 98       	cbi	0x1b, 1	; 27
 216:	da 9a       	sbi	0x1b, 2	; 27
 218:	f5 e0       	ldi	r31, 0x05	; 5
 21a:	fa 95       	dec	r31
 21c:	f1 f7       	brne	.-4      	; 0x21a <LCD_data+0x1a>
 21e:	00 00       	nop
 220:	da 98       	cbi	0x1b, 2	; 27
 222:	20 e1       	ldi	r18, 0x10	; 16
 224:	82 9f       	mul	r24, r18
 226:	c0 01       	movw	r24, r0
 228:	11 24       	eor	r1, r1
 22a:	8b bb       	out	0x1b, r24	; 27
 22c:	d8 9a       	sbi	0x1b, 0	; 27
 22e:	d9 98       	cbi	0x1b, 1	; 27
 230:	da 9a       	sbi	0x1b, 2	; 27
 232:	85 e0       	ldi	r24, 0x05	; 5
 234:	8a 95       	dec	r24
 236:	f1 f7       	brne	.-4      	; 0x234 <LCD_data+0x34>
 238:	00 00       	nop
 23a:	da 98       	cbi	0x1b, 2	; 27
 23c:	08 95       	ret

0000023e <LCD_wString>:
 23e:	cf 93       	push	r28
 240:	df 93       	push	r29
 242:	ec 01       	movw	r28, r24
 244:	88 81       	ld	r24, Y
 246:	88 23       	and	r24, r24
 248:	29 f0       	breq	.+10     	; 0x254 <LCD_wString+0x16>
 24a:	21 96       	adiw	r28, 0x01	; 1
 24c:	d9 df       	rcall	.-78     	; 0x200 <LCD_data>
 24e:	89 91       	ld	r24, Y+
 250:	81 11       	cpse	r24, r1
 252:	fc cf       	rjmp	.-8      	; 0x24c <LCD_wString+0xe>
 254:	df 91       	pop	r29
 256:	cf 91       	pop	r28
 258:	08 95       	ret

0000025a <SERVO_init>:
#ifndef SERVO_H_
#define SERVO_H_

int SERVO_init(void)
{
	TCCR1A = (1 << COM1A1) | (1 << WGM11); // PWM 설정
 25a:	82 e8       	ldi	r24, 0x82	; 130
 25c:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = (1 << WGM13) | (1 << WGM12) | (1 << CS11) | (1 << CS10); // 분주비 설정
 25e:	8b e1       	ldi	r24, 0x1B	; 27
 260:	8e bd       	out	0x2e, r24	; 46
	ICR1 = 4999; // ICR1 set to TOP
 262:	87 e8       	ldi	r24, 0x87	; 135
 264:	93 e1       	ldi	r25, 0x13	; 19
 266:	97 bd       	out	0x27, r25	; 39
 268:	86 bd       	out	0x26, r24	; 38
	OCR1A = 500; // 0 degree
 26a:	84 ef       	ldi	r24, 0xF4	; 244
 26c:	91 e0       	ldi	r25, 0x01	; 1
 26e:	9b bd       	out	0x2b, r25	; 43
 270:	8a bd       	out	0x2a, r24	; 42
	TCNT1 = 0x00; // Strating point
 272:	1d bc       	out	0x2d, r1	; 45
 274:	1c bc       	out	0x2c, r1	; 44
}
 276:	08 95       	ret

00000278 <SERVO_ON>:
		
void SERVO_ON()
{
	OCR1A = 250;
 278:	8a ef       	ldi	r24, 0xFA	; 250
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	9b bd       	out	0x2b, r25	; 43
 27e:	8a bd       	out	0x2a, r24	; 42
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 280:	2f ef       	ldi	r18, 0xFF	; 255
 282:	81 ee       	ldi	r24, 0xE1	; 225
 284:	94 e0       	ldi	r25, 0x04	; 4
 286:	21 50       	subi	r18, 0x01	; 1
 288:	80 40       	sbci	r24, 0x00	; 0
 28a:	90 40       	sbci	r25, 0x00	; 0
 28c:	e1 f7       	brne	.-8      	; 0x286 <SERVO_ON+0xe>
 28e:	00 c0       	rjmp	.+0      	; 0x290 <SERVO_ON+0x18>
 290:	00 00       	nop
 292:	08 95       	ret

00000294 <SERVO_OFF>:
	_delay_ms(100);
}

void SERVO_OFF() // 모터를 돌려서 가스를 차단 
{
	OCR1A = 500;
 294:	84 ef       	ldi	r24, 0xF4	; 244
 296:	91 e0       	ldi	r25, 0x01	; 1
 298:	9b bd       	out	0x2b, r25	; 43
 29a:	8a bd       	out	0x2a, r24	; 42
 29c:	2f ef       	ldi	r18, 0xFF	; 255
 29e:	81 ee       	ldi	r24, 0xE1	; 225
 2a0:	94 e0       	ldi	r25, 0x04	; 4
 2a2:	21 50       	subi	r18, 0x01	; 1
 2a4:	80 40       	sbci	r24, 0x00	; 0
 2a6:	90 40       	sbci	r25, 0x00	; 0
 2a8:	e1 f7       	brne	.-8      	; 0x2a2 <SERVO_OFF+0xe>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <SERVO_OFF+0x18>
 2ac:	00 00       	nop
 2ae:	08 95       	ret

000002b0 <main>:
char uart_arr[5]; // uart 수신 문자열
int uart_i = 0, uart_finish = 0;
int uart_state = 0;

int main(void)
{
 2b0:	cf 93       	push	r28
 2b2:	df 93       	push	r29
 2b4:	cd b7       	in	r28, 0x3d	; 61
 2b6:	de b7       	in	r29, 0x3e	; 62
 2b8:	e2 97       	sbiw	r28, 0x32	; 50
 2ba:	0f b6       	in	r0, 0x3f	; 63
 2bc:	f8 94       	cli
 2be:	de bf       	out	0x3e, r29	; 62
 2c0:	0f be       	out	0x3f, r0	; 63
 2c2:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0xFF; // 4bit LCD사용
 2c4:	8f ef       	ldi	r24, 0xFF	; 255
 2c6:	8a bb       	out	0x1a, r24	; 26
	PORTA = 0x00;
 2c8:	1b ba       	out	0x1b, r1	; 27
	DDRB = 0xFF; // 서보 모터 연결
 2ca:	87 bb       	out	0x17, r24	; 23
	PORTB = 0x00;
 2cc:	18 ba       	out	0x18, r1	; 24
	DDRC = 0xFF; // 부저, 팬모터, 릴레이 출력핀
 2ce:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x04; // 평상시 포트 출력
 2d0:	84 e0       	ldi	r24, 0x04	; 4
 2d2:	85 bb       	out	0x15, r24	; 21
	DDRF = 0x00; // 가스, 불꽃, 온도센서 입력핀
 2d4:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    
	int state = 0; // 상황을 저장
	
	uart_init(BAUDRATE(9600)); // baudrate 속도 설정
 2d8:	87 e6       	ldi	r24, 0x67	; 103
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	36 df       	rcall	.-404    	; 0x14a <uart_init>
	sei();
	
	LCD_init();
 2de:	78 94       	sei
	SERVO_init();
 2e0:	65 df       	rcall	.-310    	; 0x1ac <LCD_init>
 2e2:	bb df       	rcall	.-138    	; 0x25a <SERVO_init>
	
	float temp = 0, gas = 0;
	int temp_state = 0, gas_state = 0, fire_state = 0;
	char buff[50]; // uart 송신 문자열
	
	memset(uart_arr, 0, 5); // uart 수신 문자열 초기화
 2e4:	85 e0       	ldi	r24, 0x05	; 5
 2e6:	ea e5       	ldi	r30, 0x5A	; 90
 2e8:	f1 e0       	ldi	r31, 0x01	; 1
 2ea:	df 01       	movw	r26, r30
 2ec:	1d 92       	st	X+, r1
 2ee:	8a 95       	dec	r24
 2f0:	e9 f7       	brne	.-6      	; 0x2ec <main+0x3c>
		_delay_ms(100);
		
		int fire_state = fire_sensor_read();
		_delay_ms(100);
		
		sprintf(buff, "temp : %3.1f, gas : %.1f, fire : %d     ", temp, gas, fire_state);
 2f2:	0f 2e       	mov	r0, r31
 2f4:	f9 e1       	ldi	r31, 0x19	; 25
 2f6:	af 2e       	mov	r10, r31
 2f8:	f1 e0       	ldi	r31, 0x01	; 1
 2fa:	bf 2e       	mov	r11, r31
 2fc:	f0 2d       	mov	r31, r0
 2fe:	ce 01       	movw	r24, r28
 300:	01 96       	adiw	r24, 0x01	; 1
 302:	7c 01       	movw	r14, r24
		uart_string(buff);
		
		sprintf(buff, "%.1fC  %.1f%%  %d", temp, gas*20, fire_state);
 304:	0f 2e       	mov	r0, r31
 306:	f2 e4       	ldi	r31, 0x42	; 66
 308:	cf 2e       	mov	r12, r31
 30a:	f1 e0       	ldi	r31, 0x01	; 1
 30c:	df 2e       	mov	r13, r31
 30e:	f0 2d       	mov	r31, r0
	
	memset(uart_arr, 0, 5); // uart 수신 문자열 초기화
	
    while (1) 
    {
		if(uart_finish)
 310:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <uart_finish>
 314:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <uart_finish+0x1>
 318:	89 2b       	or	r24, r25
 31a:	09 f4       	brne	.+2      	; 0x31e <main+0x6e>
 31c:	08 c1       	rjmp	.+528    	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
		{
			uart_i = 0;
 31e:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <uart_i+0x1>
 322:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <uart_i>
			uart_finish = 0;
 326:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <uart_finish+0x1>
 32a:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <uart_finish>
			
			if(strcmp(uart_arr, "auto")==0) uart_state = 0; // 자동 모드
 32e:	60 e0       	ldi	r22, 0x00	; 0
 330:	71 e0       	ldi	r23, 0x01	; 1
 332:	8a e5       	ldi	r24, 0x5A	; 90
 334:	91 e0       	ldi	r25, 0x01	; 1
 336:	17 d3       	rcall	.+1582   	; 0x966 <strcmp>
 338:	89 2b       	or	r24, r25
 33a:	29 f4       	brne	.+10     	; 0x346 <main+0x96>
 33c:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <__data_end+0x1>
 340:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <__data_end>
 344:	36 c0       	rjmp	.+108    	; 0x3b2 <main+0x102>
			else if(strcmp(uart_arr, "sudo")==0) uart_state = 1; // 수동 모드
 346:	65 e0       	ldi	r22, 0x05	; 5
 348:	71 e0       	ldi	r23, 0x01	; 1
 34a:	8a e5       	ldi	r24, 0x5A	; 90
 34c:	91 e0       	ldi	r25, 0x01	; 1
 34e:	0b d3       	rcall	.+1558   	; 0x966 <strcmp>
 350:	89 2b       	or	r24, r25
 352:	31 f4       	brne	.+12     	; 0x360 <main+0xb0>
 354:	91 e0       	ldi	r25, 0x01	; 1
 356:	90 93 54 01 	sts	0x0154, r25	; 0x800154 <__data_end>
 35a:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <__data_end+0x1>
			else if(strcmp(uart_arr, "fanm")==0) uart_state = 10;
 35e:	29 c0       	rjmp	.+82     	; 0x3b2 <main+0x102>
 360:	6a e0       	ldi	r22, 0x0A	; 10
 362:	71 e0       	ldi	r23, 0x01	; 1
 364:	8a e5       	ldi	r24, 0x5A	; 90
 366:	91 e0       	ldi	r25, 0x01	; 1
 368:	fe d2       	rcall	.+1532   	; 0x966 <strcmp>
 36a:	89 2b       	or	r24, r25
 36c:	39 f4       	brne	.+14     	; 0x37c <main+0xcc>
 36e:	aa e0       	ldi	r26, 0x0A	; 10
 370:	b0 e0       	ldi	r27, 0x00	; 0
 372:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <__data_end+0x1>
 376:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <__data_end>
			else if(strcmp(uart_arr, "serm")==0) uart_state = 11;
 37a:	1b c0       	rjmp	.+54     	; 0x3b2 <main+0x102>
 37c:	6f e0       	ldi	r22, 0x0F	; 15
 37e:	71 e0       	ldi	r23, 0x01	; 1
 380:	8a e5       	ldi	r24, 0x5A	; 90
 382:	91 e0       	ldi	r25, 0x01	; 1
 384:	f0 d2       	rcall	.+1504   	; 0x966 <strcmp>
 386:	89 2b       	or	r24, r25
 388:	39 f4       	brne	.+14     	; 0x398 <main+0xe8>
 38a:	8b e0       	ldi	r24, 0x0B	; 11
 38c:	90 e0       	ldi	r25, 0x00	; 0
 38e:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <__data_end+0x1>
 392:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <__data_end>
			else if(strcmp(uart_arr, "rela")==0) uart_state = 12;
 396:	0d c0       	rjmp	.+26     	; 0x3b2 <main+0x102>
 398:	64 e1       	ldi	r22, 0x14	; 20
 39a:	71 e0       	ldi	r23, 0x01	; 1
 39c:	8a e5       	ldi	r24, 0x5A	; 90
 39e:	91 e0       	ldi	r25, 0x01	; 1
 3a0:	e2 d2       	rcall	.+1476   	; 0x966 <strcmp>
 3a2:	89 2b       	or	r24, r25
 3a4:	31 f4       	brne	.+12     	; 0x3b2 <main+0x102>
 3a6:	ac e0       	ldi	r26, 0x0C	; 12
 3a8:	b0 e0       	ldi	r27, 0x00	; 0
 3aa:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <__data_end+0x1>
 3ae:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <__data_end>
			
			memset(uart_arr, 0, 5); // uart 수신 문자열 초기화
 3b2:	ea e5       	ldi	r30, 0x5A	; 90
 3b4:	f1 e0       	ldi	r31, 0x01	; 1
 3b6:	df 01       	movw	r26, r30
 3b8:	25 e0       	ldi	r18, 0x05	; 5
 3ba:	1d 92       	st	X+, r1
 3bc:	2a 95       	dec	r18
		}
		float temp = temp_sensor_read();
 3be:	e9 f7       	brne	.-6      	; 0x3ba <main+0x10a>
 3c0:	94 de       	rcall	.-728    	; 0xea <temp_sensor_read>
 3c2:	96 2e       	mov	r9, r22
 3c4:	87 2e       	mov	r8, r23
 3c6:	78 2e       	mov	r7, r24
 3c8:	69 2e       	mov	r6, r25
 3ca:	8f ef       	ldi	r24, 0xFF	; 255
 3cc:	91 ee       	ldi	r25, 0xE1	; 225
 3ce:	a4 e0       	ldi	r26, 0x04	; 4
 3d0:	81 50       	subi	r24, 0x01	; 1
 3d2:	90 40       	sbci	r25, 0x00	; 0
 3d4:	a0 40       	sbci	r26, 0x00	; 0
 3d6:	e1 f7       	brne	.-8      	; 0x3d0 <main+0x120>
 3d8:	00 c0       	rjmp	.+0      	; 0x3da <main+0x12a>
		if(temp > 30.0) temp_state = 1; // 30도 이상일때
		else temp_state = 0;
		_delay_ms(100);
		
		float gas = gas_sensor_read();
 3da:	00 00       	nop
 3dc:	9d de       	rcall	.-710    	; 0x118 <gas_sensor_read>
 3de:	26 2e       	mov	r2, r22
 3e0:	37 2e       	mov	r3, r23
 3e2:	48 2e       	mov	r4, r24
 3e4:	59 2e       	mov	r5, r25
 3e6:	bf ef       	ldi	r27, 0xFF	; 255
 3e8:	21 ee       	ldi	r18, 0xE1	; 225
 3ea:	84 e0       	ldi	r24, 0x04	; 4
 3ec:	b1 50       	subi	r27, 0x01	; 1
 3ee:	20 40       	sbci	r18, 0x00	; 0
 3f0:	80 40       	sbci	r24, 0x00	; 0
 3f2:	e1 f7       	brne	.-8      	; 0x3ec <main+0x13c>
 3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <main+0x146>
		if(temp > 3.0) gas_state = 1; // 3.0이상일때
		else gas_state = 0;
		_delay_ms(100);
		
		int fire_state = fire_sensor_read();
 3f6:	00 00       	nop
 3f8:	a1 de       	rcall	.-702    	; 0x13c <fire_sensor_read>
 3fa:	8c 01       	movw	r16, r24
 3fc:	9f ef       	ldi	r25, 0xFF	; 255
 3fe:	a1 ee       	ldi	r26, 0xE1	; 225
 400:	b4 e0       	ldi	r27, 0x04	; 4
 402:	91 50       	subi	r25, 0x01	; 1
 404:	a0 40       	sbci	r26, 0x00	; 0
 406:	b0 40       	sbci	r27, 0x00	; 0
 408:	e1 f7       	brne	.-8      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 40a:	00 c0       	rjmp	.+0      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 40c:	00 00       	nop
		_delay_ms(100);
		
		sprintf(buff, "temp : %3.1f, gas : %.1f, fire : %d     ", temp, gas, fire_state);
 40e:	1f 93       	push	r17
 410:	0f 93       	push	r16
 412:	5f 92       	push	r5
 414:	4f 92       	push	r4
 416:	3f 92       	push	r3
 418:	2f 92       	push	r2
 41a:	6f 92       	push	r6
 41c:	7f 92       	push	r7
 41e:	8f 92       	push	r8
 420:	9f 92       	push	r9
 422:	bf 92       	push	r11
 424:	af 92       	push	r10
 426:	ff 92       	push	r15
 428:	ef 92       	push	r14
		uart_string(buff);
 42a:	a6 d2       	rcall	.+1356   	; 0x978 <sprintf>
 42c:	c7 01       	movw	r24, r14
		
		sprintf(buff, "%.1fC  %.1f%%  %d", temp, gas*20, fire_state);
 42e:	97 de       	rcall	.-722    	; 0x15e <uart_string>
 430:	1f 93       	push	r17
 432:	0f 93       	push	r16
 434:	20 e0       	ldi	r18, 0x00	; 0
 436:	30 e0       	ldi	r19, 0x00	; 0
 438:	40 ea       	ldi	r20, 0xA0	; 160
 43a:	51 e4       	ldi	r21, 0x41	; 65
 43c:	62 2d       	mov	r22, r2
 43e:	73 2d       	mov	r23, r3
 440:	84 2d       	mov	r24, r4
 442:	95 2d       	mov	r25, r5
 444:	09 d2       	rcall	.+1042   	; 0x858 <__mulsf3>
 446:	9f 93       	push	r25
 448:	8f 93       	push	r24
 44a:	7f 93       	push	r23
 44c:	6f 93       	push	r22
 44e:	6f 92       	push	r6
 450:	7f 92       	push	r7
 452:	8f 92       	push	r8
 454:	9f 92       	push	r9
 456:	df 92       	push	r13
 458:	cf 92       	push	r12
 45a:	ff 92       	push	r15
 45c:	ef 92       	push	r14
 45e:	8c d2       	rcall	.+1304   	; 0x978 <sprintf>
		LCD_setcursor(0, 0);
		LCD_wString(buff);
 460:	80 e8       	ldi	r24, 0x80	; 128
 462:	8b de       	rcall	.-746    	; 0x17a <LCD_command>
 464:	c7 01       	movw	r24, r14
		
		if(temp_state==0 && gas_state==0 && fire_state==0) state = 0; // 평상
 466:	eb de       	rcall	.-554    	; 0x23e <LCD_wString>
 468:	0f b6       	in	r0, 0x3f	; 63
 46a:	f8 94       	cli
 46c:	de bf       	out	0x3e, r29	; 62
 46e:	0f be       	out	0x3f, r0	; 63
 470:	cd bf       	out	0x3d, r28	; 61
 472:	20 e0       	ldi	r18, 0x00	; 0
 474:	30 e0       	ldi	r19, 0x00	; 0
 476:	40 ef       	ldi	r20, 0xF0	; 240
 478:	51 e4       	ldi	r21, 0x41	; 65
 47a:	69 2d       	mov	r22, r9
 47c:	78 2d       	mov	r23, r8
 47e:	87 2d       	mov	r24, r7
 480:	96 2d       	mov	r25, r6
 482:	e6 d1       	rcall	.+972    	; 0x850 <__gesf2>
 484:	18 16       	cp	r1, r24
 486:	7c f0       	brlt	.+30     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 488:	20 e0       	ldi	r18, 0x00	; 0
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	40 e4       	ldi	r20, 0x40	; 64
 48e:	50 e4       	ldi	r21, 0x40	; 64
 490:	69 2d       	mov	r22, r9
 492:	78 2d       	mov	r23, r8
 494:	87 2d       	mov	r24, r7
 496:	96 2d       	mov	r25, r6
 498:	db d1       	rcall	.+950    	; 0x850 <__gesf2>
 49a:	18 16       	cp	r1, r24
 49c:	0c f1       	brlt	.+66     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 49e:	01 15       	cp	r16, r1
 4a0:	11 05       	cpc	r17, r1
 4a2:	29 f1       	breq	.+74     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
		else if(temp_state==1 && gas_state==1 && fire_state==1) state = 4; // 화재
 4a4:	20 c0       	rjmp	.+64     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4a6:	20 e0       	ldi	r18, 0x00	; 0
 4a8:	30 e0       	ldi	r19, 0x00	; 0
 4aa:	40 e4       	ldi	r20, 0x40	; 64
 4ac:	50 e4       	ldi	r21, 0x40	; 64
 4ae:	69 2d       	mov	r22, r9
 4b0:	78 2d       	mov	r23, r8
 4b2:	87 2d       	mov	r24, r7
 4b4:	96 2d       	mov	r25, r6
 4b6:	cc d1       	rcall	.+920    	; 0x850 <__gesf2>
 4b8:	18 16       	cp	r1, r24
 4ba:	24 f4       	brge	.+8      	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4bc:	01 30       	cpi	r16, 0x01	; 1
 4be:	11 05       	cpc	r17, r1
 4c0:	09 f5       	brne	.+66     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
		else if(temp_state==1 && gas_state==0 && fire_state==0) state = 1; // 온도
 4c2:	1b c0       	rjmp	.+54     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4c4:	20 e0       	ldi	r18, 0x00	; 0
 4c6:	30 e0       	ldi	r19, 0x00	; 0
 4c8:	40 e4       	ldi	r20, 0x40	; 64
 4ca:	50 e4       	ldi	r21, 0x40	; 64
 4cc:	69 2d       	mov	r22, r9
 4ce:	78 2d       	mov	r23, r8
 4d0:	87 2d       	mov	r24, r7
 4d2:	96 2d       	mov	r25, r6
 4d4:	bd d1       	rcall	.+890    	; 0x850 <__gesf2>
 4d6:	18 16       	cp	r1, r24
 4d8:	ac f0       	brlt	.+42     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4da:	01 2b       	or	r16, r17
		else if(temp_state==0 && gas_state==1 && fire_state==0) state = 2; // 가스
 4dc:	f1 f0       	breq	.+60     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4de:	12 c0       	rjmp	.+36     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4e0:	01 2b       	or	r16, r17
		else if(temp_state==0 && gas_state==0 && fire_state==1) state = 3; // 불꽃
 4e2:	f1 f0       	breq	.+60     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 4e4:	0f c0       	rjmp	.+30     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4e6:	01 30       	cpi	r16, 0x01	; 1
 4e8:	11 05       	cpc	r17, r1
		else state = 5;
		
		switch(state)
		{
			case 0: // 평상
			PORTC = 0x04;
 4ea:	61 f4       	brne	.+24     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4ec:	03 c0       	rjmp	.+6      	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
			break; 
 4ee:	94 e0       	ldi	r25, 0x04	; 4
			case 2:
			PORTC = 0x06;
			break;
			
			case 3: // 불꽃 이상
			PORTC = 0x04;
 4f0:	95 bb       	out	0x15, r25	; 21
 4f2:	08 c0       	rjmp	.+16     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
			break;
 4f4:	a4 e0       	ldi	r26, 0x04	; 4
			
			case 4: // 화재
			PORTC = 0x01;
 4f6:	a5 bb       	out	0x15, r26	; 21
 4f8:	03 c0       	rjmp	.+6      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
			break;
 4fa:	b1 e0       	ldi	r27, 0x01	; 1
		}
		if(state == 3) SERVO_OFF();
 4fc:	b5 bb       	out	0x15, r27	; 21
 4fe:	02 c0       	rjmp	.+4      	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
		else SERVO_ON();
 500:	c9 de       	rcall	.-622    	; 0x294 <SERVO_OFF>
 502:	01 c0       	rjmp	.+2      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 504:	b9 de       	rcall	.-654    	; 0x278 <SERVO_ON>
 506:	2f ef       	ldi	r18, 0xFF	; 255
 508:	89 e6       	ldi	r24, 0x69	; 105
 50a:	98 e1       	ldi	r25, 0x18	; 24
 50c:	21 50       	subi	r18, 0x01	; 1
 50e:	80 40       	sbci	r24, 0x00	; 0
 510:	90 40       	sbci	r25, 0x00	; 0
 512:	e1 f7       	brne	.-8      	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 514:	00 c0       	rjmp	.+0      	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 516:	00 00       	nop
		LCD_setcursor(0, 0);
		LCD_wString(buff);
		
		if(temp_state==0 && gas_state==0 && fire_state==0) state = 0; // 평상
		else if(temp_state==1 && gas_state==1 && fire_state==1) state = 4; // 화재
		else if(temp_state==1 && gas_state==0 && fire_state==0) state = 1; // 온도
 518:	fb ce       	rjmp	.-522    	; 0x310 <main+0x60>
 51a:	81 e0       	ldi	r24, 0x01	; 1
		else if(temp_state==0 && gas_state==1 && fire_state==0) state = 2; // 가스
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	02 c0       	rjmp	.+4      	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
			PORTC = 0x04;
			break; 
			
			case 1: // 온도 or 가스 이상
			case 2:
			PORTC = 0x06;
 520:	82 e0       	ldi	r24, 0x02	; 2
 522:	90 e0       	ldi	r25, 0x00	; 0
			
			case 4: // 화재
			PORTC = 0x01;
			break;
		}
		if(state == 3) SERVO_OFF();
 524:	a6 e0       	ldi	r26, 0x06	; 6
 526:	a5 bb       	out	0x15, r26	; 21
 528:	03 97       	sbiw	r24, 0x03	; 3
			else if(strcmp(uart_arr, "serm")==0) uart_state = 11;
			else if(strcmp(uart_arr, "rela")==0) uart_state = 12;
			
			memset(uart_arr, 0, 5); // uart 수신 문자열 초기화
		}
		float temp = temp_sensor_read();
 52a:	51 f3       	breq	.-44     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 52c:	eb cf       	rjmp	.-42     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 52e:	dd dd       	rcall	.-1094   	; 0xea <temp_sensor_read>
 530:	96 2e       	mov	r9, r22
 532:	87 2e       	mov	r8, r23
 534:	78 2e       	mov	r7, r24
 536:	69 2e       	mov	r6, r25
 538:	bf ef       	ldi	r27, 0xFF	; 255
 53a:	21 ee       	ldi	r18, 0xE1	; 225
 53c:	84 e0       	ldi	r24, 0x04	; 4
 53e:	b1 50       	subi	r27, 0x01	; 1
 540:	20 40       	sbci	r18, 0x00	; 0
 542:	80 40       	sbci	r24, 0x00	; 0
 544:	e1 f7       	brne	.-8      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
		if(temp > 30.0) temp_state = 1; // 30도 이상일때
		else temp_state = 0;
		_delay_ms(100);
		
		float gas = gas_sensor_read();
 546:	00 c0       	rjmp	.+0      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 548:	00 00       	nop
 54a:	e6 dd       	rcall	.-1076   	; 0x118 <gas_sensor_read>
 54c:	26 2e       	mov	r2, r22
 54e:	37 2e       	mov	r3, r23
 550:	48 2e       	mov	r4, r24
 552:	59 2e       	mov	r5, r25
 554:	9f ef       	ldi	r25, 0xFF	; 255
 556:	a1 ee       	ldi	r26, 0xE1	; 225
 558:	b4 e0       	ldi	r27, 0x04	; 4
 55a:	91 50       	subi	r25, 0x01	; 1
 55c:	a0 40       	sbci	r26, 0x00	; 0
 55e:	b0 40       	sbci	r27, 0x00	; 0
 560:	e1 f7       	brne	.-8      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 562:	00 c0       	rjmp	.+0      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
		if(temp > 3.0) gas_state = 1; // 3.0이상일때
		else gas_state = 0;
		_delay_ms(100);
		
		int fire_state = fire_sensor_read();
 564:	00 00       	nop
 566:	ea dd       	rcall	.-1068   	; 0x13c <fire_sensor_read>
 568:	8c 01       	movw	r16, r24
 56a:	2f ef       	ldi	r18, 0xFF	; 255
 56c:	81 ee       	ldi	r24, 0xE1	; 225
 56e:	94 e0       	ldi	r25, 0x04	; 4
 570:	21 50       	subi	r18, 0x01	; 1
 572:	80 40       	sbci	r24, 0x00	; 0
 574:	90 40       	sbci	r25, 0x00	; 0
 576:	e1 f7       	brne	.-8      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 578:	00 c0       	rjmp	.+0      	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
		_delay_ms(100);
		
		sprintf(buff, "temp : %3.1f, gas : %.1f, fire : %d     ", temp, gas, fire_state);
 57a:	00 00       	nop
 57c:	1f 93       	push	r17
 57e:	0f 93       	push	r16
 580:	5f 92       	push	r5
 582:	4f 92       	push	r4
 584:	3f 92       	push	r3
 586:	2f 92       	push	r2
 588:	6f 92       	push	r6
 58a:	7f 92       	push	r7
 58c:	8f 92       	push	r8
 58e:	9f 92       	push	r9
 590:	bf 92       	push	r11
 592:	af 92       	push	r10
 594:	ff 92       	push	r15
		uart_string(buff);
 596:	ef 92       	push	r14
 598:	ef d1       	rcall	.+990    	; 0x978 <sprintf>
		
		sprintf(buff, "%.1fC  %.1f%%  %d", temp, gas*20, fire_state);
 59a:	c7 01       	movw	r24, r14
 59c:	e0 dd       	rcall	.-1088   	; 0x15e <uart_string>
 59e:	1f 93       	push	r17
 5a0:	0f 93       	push	r16
 5a2:	20 e0       	ldi	r18, 0x00	; 0
 5a4:	30 e0       	ldi	r19, 0x00	; 0
 5a6:	40 ea       	ldi	r20, 0xA0	; 160
 5a8:	51 e4       	ldi	r21, 0x41	; 65
 5aa:	62 2d       	mov	r22, r2
 5ac:	73 2d       	mov	r23, r3
 5ae:	84 2d       	mov	r24, r4
 5b0:	95 2d       	mov	r25, r5
 5b2:	52 d1       	rcall	.+676    	; 0x858 <__mulsf3>
 5b4:	9f 93       	push	r25
 5b6:	8f 93       	push	r24
 5b8:	7f 93       	push	r23
 5ba:	6f 93       	push	r22
 5bc:	6f 92       	push	r6
 5be:	7f 92       	push	r7
 5c0:	8f 92       	push	r8
 5c2:	9f 92       	push	r9
 5c4:	df 92       	push	r13
 5c6:	cf 92       	push	r12
 5c8:	ff 92       	push	r15
 5ca:	ef 92       	push	r14
 5cc:	d5 d1       	rcall	.+938    	; 0x978 <sprintf>
 5ce:	80 e8       	ldi	r24, 0x80	; 128
 5d0:	d4 dd       	rcall	.-1112   	; 0x17a <LCD_command>
		LCD_setcursor(0, 0);
		LCD_wString(buff);
 5d2:	c7 01       	movw	r24, r14
 5d4:	34 de       	rcall	.-920    	; 0x23e <LCD_wString>
 5d6:	0f b6       	in	r0, 0x3f	; 63
		
		if(temp_state==0 && gas_state==0 && fire_state==0) state = 0; // 평상
 5d8:	f8 94       	cli
 5da:	de bf       	out	0x3e, r29	; 62
 5dc:	0f be       	out	0x3f, r0	; 63
 5de:	cd bf       	out	0x3d, r28	; 61
 5e0:	20 e0       	ldi	r18, 0x00	; 0
 5e2:	30 e0       	ldi	r19, 0x00	; 0
 5e4:	40 ef       	ldi	r20, 0xF0	; 240
 5e6:	51 e4       	ldi	r21, 0x41	; 65
 5e8:	69 2d       	mov	r22, r9
 5ea:	78 2d       	mov	r23, r8
 5ec:	87 2d       	mov	r24, r7
 5ee:	96 2d       	mov	r25, r6
 5f0:	2f d1       	rcall	.+606    	; 0x850 <__gesf2>
 5f2:	18 16       	cp	r1, r24
 5f4:	0c f0       	brlt	.+2      	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5f6:	48 cf       	rjmp	.-368    	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 5f8:	56 cf       	rjmp	.-340    	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>

000005fa <__vector_18>:
 5fa:	1f 92       	push	r1
 5fc:	0f 92       	push	r0
		_delay_ms(500); // 0.5초마다 측정
    }
}

ISR(USART0_RX_vect) // uart에 들어온 값이 있을 때 실행
{
 5fe:	0f b6       	in	r0, 0x3f	; 63
 600:	0f 92       	push	r0
 602:	11 24       	eor	r1, r1
 604:	0b b6       	in	r0, 0x3b	; 59
 606:	0f 92       	push	r0
 608:	2f 93       	push	r18
 60a:	3f 93       	push	r19
 60c:	4f 93       	push	r20
 60e:	8f 93       	push	r24
 610:	9f 93       	push	r25
 612:	ef 93       	push	r30
 614:	ff 93       	push	r31
	unsigned char re = UDR0; // UDR0에 레지스터에 데이터가 저장이 된다.
 616:	4c b1       	in	r20, 0x0c	; 12
	uart_arr[uart_i++] = re;
 618:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <uart_i>
 61c:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <uart_i+0x1>
 620:	9c 01       	movw	r18, r24
 622:	2f 5f       	subi	r18, 0xFF	; 255
 624:	3f 4f       	sbci	r19, 0xFF	; 255
 626:	30 93 59 01 	sts	0x0159, r19	; 0x800159 <uart_i+0x1>
 62a:	20 93 58 01 	sts	0x0158, r18	; 0x800158 <uart_i>
 62e:	fc 01       	movw	r30, r24
 630:	e6 5a       	subi	r30, 0xA6	; 166
 632:	fe 4f       	sbci	r31, 0xFE	; 254
 634:	40 83       	st	Z, r20
	if(uart_i == 4) uart_finish = 1;
 636:	24 30       	cpi	r18, 0x04	; 4
 638:	31 05       	cpc	r19, r1
 63a:	31 f4       	brne	.+12     	; 0x648 <__vector_18+0x4e>
 63c:	81 e0       	ldi	r24, 0x01	; 1
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <uart_finish+0x1>
 644:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <uart_finish>
 648:	ff 91       	pop	r31
 64a:	ef 91       	pop	r30
 64c:	9f 91       	pop	r25
 64e:	8f 91       	pop	r24
 650:	4f 91       	pop	r20
 652:	3f 91       	pop	r19
 654:	2f 91       	pop	r18
 656:	0f 90       	pop	r0
 658:	0b be       	out	0x3b, r0	; 59
 65a:	0f 90       	pop	r0
 65c:	0f be       	out	0x3f, r0	; 63
 65e:	0f 90       	pop	r0
 660:	1f 90       	pop	r1
 662:	18 95       	reti

00000664 <__divsf3>:
 664:	0c d0       	rcall	.+24     	; 0x67e <__divsf3x>
 666:	ba c0       	rjmp	.+372    	; 0x7dc <__fp_round>
 668:	b2 d0       	rcall	.+356    	; 0x7ce <__fp_pscB>
 66a:	40 f0       	brcs	.+16     	; 0x67c <__divsf3+0x18>
 66c:	a9 d0       	rcall	.+338    	; 0x7c0 <__fp_pscA>
 66e:	30 f0       	brcs	.+12     	; 0x67c <__divsf3+0x18>
 670:	21 f4       	brne	.+8      	; 0x67a <__divsf3+0x16>
 672:	5f 3f       	cpi	r21, 0xFF	; 255
 674:	19 f0       	breq	.+6      	; 0x67c <__divsf3+0x18>
 676:	9b c0       	rjmp	.+310    	; 0x7ae <__fp_inf>
 678:	51 11       	cpse	r21, r1
 67a:	e4 c0       	rjmp	.+456    	; 0x844 <__fp_szero>
 67c:	9e c0       	rjmp	.+316    	; 0x7ba <__fp_nan>

0000067e <__divsf3x>:
 67e:	bf d0       	rcall	.+382    	; 0x7fe <__fp_split3>
 680:	98 f3       	brcs	.-26     	; 0x668 <__divsf3+0x4>

00000682 <__divsf3_pse>:
 682:	99 23       	and	r25, r25
 684:	c9 f3       	breq	.-14     	; 0x678 <__divsf3+0x14>
 686:	55 23       	and	r21, r21
 688:	b1 f3       	breq	.-20     	; 0x676 <__divsf3+0x12>
 68a:	95 1b       	sub	r25, r21
 68c:	55 0b       	sbc	r21, r21
 68e:	bb 27       	eor	r27, r27
 690:	aa 27       	eor	r26, r26
 692:	62 17       	cp	r22, r18
 694:	73 07       	cpc	r23, r19
 696:	84 07       	cpc	r24, r20
 698:	38 f0       	brcs	.+14     	; 0x6a8 <__divsf3_pse+0x26>
 69a:	9f 5f       	subi	r25, 0xFF	; 255
 69c:	5f 4f       	sbci	r21, 0xFF	; 255
 69e:	22 0f       	add	r18, r18
 6a0:	33 1f       	adc	r19, r19
 6a2:	44 1f       	adc	r20, r20
 6a4:	aa 1f       	adc	r26, r26
 6a6:	a9 f3       	breq	.-22     	; 0x692 <__divsf3_pse+0x10>
 6a8:	33 d0       	rcall	.+102    	; 0x710 <__divsf3_pse+0x8e>
 6aa:	0e 2e       	mov	r0, r30
 6ac:	3a f0       	brmi	.+14     	; 0x6bc <__divsf3_pse+0x3a>
 6ae:	e0 e8       	ldi	r30, 0x80	; 128
 6b0:	30 d0       	rcall	.+96     	; 0x712 <__divsf3_pse+0x90>
 6b2:	91 50       	subi	r25, 0x01	; 1
 6b4:	50 40       	sbci	r21, 0x00	; 0
 6b6:	e6 95       	lsr	r30
 6b8:	00 1c       	adc	r0, r0
 6ba:	ca f7       	brpl	.-14     	; 0x6ae <__divsf3_pse+0x2c>
 6bc:	29 d0       	rcall	.+82     	; 0x710 <__divsf3_pse+0x8e>
 6be:	fe 2f       	mov	r31, r30
 6c0:	27 d0       	rcall	.+78     	; 0x710 <__divsf3_pse+0x8e>
 6c2:	66 0f       	add	r22, r22
 6c4:	77 1f       	adc	r23, r23
 6c6:	88 1f       	adc	r24, r24
 6c8:	bb 1f       	adc	r27, r27
 6ca:	26 17       	cp	r18, r22
 6cc:	37 07       	cpc	r19, r23
 6ce:	48 07       	cpc	r20, r24
 6d0:	ab 07       	cpc	r26, r27
 6d2:	b0 e8       	ldi	r27, 0x80	; 128
 6d4:	09 f0       	breq	.+2      	; 0x6d8 <__divsf3_pse+0x56>
 6d6:	bb 0b       	sbc	r27, r27
 6d8:	80 2d       	mov	r24, r0
 6da:	bf 01       	movw	r22, r30
 6dc:	ff 27       	eor	r31, r31
 6de:	93 58       	subi	r25, 0x83	; 131
 6e0:	5f 4f       	sbci	r21, 0xFF	; 255
 6e2:	2a f0       	brmi	.+10     	; 0x6ee <__divsf3_pse+0x6c>
 6e4:	9e 3f       	cpi	r25, 0xFE	; 254
 6e6:	51 05       	cpc	r21, r1
 6e8:	68 f0       	brcs	.+26     	; 0x704 <__divsf3_pse+0x82>
 6ea:	61 c0       	rjmp	.+194    	; 0x7ae <__fp_inf>
 6ec:	ab c0       	rjmp	.+342    	; 0x844 <__fp_szero>
 6ee:	5f 3f       	cpi	r21, 0xFF	; 255
 6f0:	ec f3       	brlt	.-6      	; 0x6ec <__divsf3_pse+0x6a>
 6f2:	98 3e       	cpi	r25, 0xE8	; 232
 6f4:	dc f3       	brlt	.-10     	; 0x6ec <__divsf3_pse+0x6a>
 6f6:	86 95       	lsr	r24
 6f8:	77 95       	ror	r23
 6fa:	67 95       	ror	r22
 6fc:	b7 95       	ror	r27
 6fe:	f7 95       	ror	r31
 700:	9f 5f       	subi	r25, 0xFF	; 255
 702:	c9 f7       	brne	.-14     	; 0x6f6 <__divsf3_pse+0x74>
 704:	88 0f       	add	r24, r24
 706:	91 1d       	adc	r25, r1
 708:	96 95       	lsr	r25
 70a:	87 95       	ror	r24
 70c:	97 f9       	bld	r25, 7
 70e:	08 95       	ret
 710:	e1 e0       	ldi	r30, 0x01	; 1
 712:	66 0f       	add	r22, r22
 714:	77 1f       	adc	r23, r23
 716:	88 1f       	adc	r24, r24
 718:	bb 1f       	adc	r27, r27
 71a:	62 17       	cp	r22, r18
 71c:	73 07       	cpc	r23, r19
 71e:	84 07       	cpc	r24, r20
 720:	ba 07       	cpc	r27, r26
 722:	20 f0       	brcs	.+8      	; 0x72c <__divsf3_pse+0xaa>
 724:	62 1b       	sub	r22, r18
 726:	73 0b       	sbc	r23, r19
 728:	84 0b       	sbc	r24, r20
 72a:	ba 0b       	sbc	r27, r26
 72c:	ee 1f       	adc	r30, r30
 72e:	88 f7       	brcc	.-30     	; 0x712 <__divsf3_pse+0x90>
 730:	e0 95       	com	r30
 732:	08 95       	ret

00000734 <__floatunsisf>:
 734:	e8 94       	clt
 736:	09 c0       	rjmp	.+18     	; 0x74a <__floatsisf+0x12>

00000738 <__floatsisf>:
 738:	97 fb       	bst	r25, 7
 73a:	3e f4       	brtc	.+14     	; 0x74a <__floatsisf+0x12>
 73c:	90 95       	com	r25
 73e:	80 95       	com	r24
 740:	70 95       	com	r23
 742:	61 95       	neg	r22
 744:	7f 4f       	sbci	r23, 0xFF	; 255
 746:	8f 4f       	sbci	r24, 0xFF	; 255
 748:	9f 4f       	sbci	r25, 0xFF	; 255
 74a:	99 23       	and	r25, r25
 74c:	a9 f0       	breq	.+42     	; 0x778 <__floatsisf+0x40>
 74e:	f9 2f       	mov	r31, r25
 750:	96 e9       	ldi	r25, 0x96	; 150
 752:	bb 27       	eor	r27, r27
 754:	93 95       	inc	r25
 756:	f6 95       	lsr	r31
 758:	87 95       	ror	r24
 75a:	77 95       	ror	r23
 75c:	67 95       	ror	r22
 75e:	b7 95       	ror	r27
 760:	f1 11       	cpse	r31, r1
 762:	f8 cf       	rjmp	.-16     	; 0x754 <__floatsisf+0x1c>
 764:	fa f4       	brpl	.+62     	; 0x7a4 <__floatsisf+0x6c>
 766:	bb 0f       	add	r27, r27
 768:	11 f4       	brne	.+4      	; 0x76e <__floatsisf+0x36>
 76a:	60 ff       	sbrs	r22, 0
 76c:	1b c0       	rjmp	.+54     	; 0x7a4 <__floatsisf+0x6c>
 76e:	6f 5f       	subi	r22, 0xFF	; 255
 770:	7f 4f       	sbci	r23, 0xFF	; 255
 772:	8f 4f       	sbci	r24, 0xFF	; 255
 774:	9f 4f       	sbci	r25, 0xFF	; 255
 776:	16 c0       	rjmp	.+44     	; 0x7a4 <__floatsisf+0x6c>
 778:	88 23       	and	r24, r24
 77a:	11 f0       	breq	.+4      	; 0x780 <__floatsisf+0x48>
 77c:	96 e9       	ldi	r25, 0x96	; 150
 77e:	11 c0       	rjmp	.+34     	; 0x7a2 <__floatsisf+0x6a>
 780:	77 23       	and	r23, r23
 782:	21 f0       	breq	.+8      	; 0x78c <__floatsisf+0x54>
 784:	9e e8       	ldi	r25, 0x8E	; 142
 786:	87 2f       	mov	r24, r23
 788:	76 2f       	mov	r23, r22
 78a:	05 c0       	rjmp	.+10     	; 0x796 <__floatsisf+0x5e>
 78c:	66 23       	and	r22, r22
 78e:	71 f0       	breq	.+28     	; 0x7ac <__floatsisf+0x74>
 790:	96 e8       	ldi	r25, 0x86	; 134
 792:	86 2f       	mov	r24, r22
 794:	70 e0       	ldi	r23, 0x00	; 0
 796:	60 e0       	ldi	r22, 0x00	; 0
 798:	2a f0       	brmi	.+10     	; 0x7a4 <__floatsisf+0x6c>
 79a:	9a 95       	dec	r25
 79c:	66 0f       	add	r22, r22
 79e:	77 1f       	adc	r23, r23
 7a0:	88 1f       	adc	r24, r24
 7a2:	da f7       	brpl	.-10     	; 0x79a <__floatsisf+0x62>
 7a4:	88 0f       	add	r24, r24
 7a6:	96 95       	lsr	r25
 7a8:	87 95       	ror	r24
 7aa:	97 f9       	bld	r25, 7
 7ac:	08 95       	ret

000007ae <__fp_inf>:
 7ae:	97 f9       	bld	r25, 7
 7b0:	9f 67       	ori	r25, 0x7F	; 127
 7b2:	80 e8       	ldi	r24, 0x80	; 128
 7b4:	70 e0       	ldi	r23, 0x00	; 0
 7b6:	60 e0       	ldi	r22, 0x00	; 0
 7b8:	08 95       	ret

000007ba <__fp_nan>:
 7ba:	9f ef       	ldi	r25, 0xFF	; 255
 7bc:	80 ec       	ldi	r24, 0xC0	; 192
 7be:	08 95       	ret

000007c0 <__fp_pscA>:
 7c0:	00 24       	eor	r0, r0
 7c2:	0a 94       	dec	r0
 7c4:	16 16       	cp	r1, r22
 7c6:	17 06       	cpc	r1, r23
 7c8:	18 06       	cpc	r1, r24
 7ca:	09 06       	cpc	r0, r25
 7cc:	08 95       	ret

000007ce <__fp_pscB>:
 7ce:	00 24       	eor	r0, r0
 7d0:	0a 94       	dec	r0
 7d2:	12 16       	cp	r1, r18
 7d4:	13 06       	cpc	r1, r19
 7d6:	14 06       	cpc	r1, r20
 7d8:	05 06       	cpc	r0, r21
 7da:	08 95       	ret

000007dc <__fp_round>:
 7dc:	09 2e       	mov	r0, r25
 7de:	03 94       	inc	r0
 7e0:	00 0c       	add	r0, r0
 7e2:	11 f4       	brne	.+4      	; 0x7e8 <__fp_round+0xc>
 7e4:	88 23       	and	r24, r24
 7e6:	52 f0       	brmi	.+20     	; 0x7fc <__fp_round+0x20>
 7e8:	bb 0f       	add	r27, r27
 7ea:	40 f4       	brcc	.+16     	; 0x7fc <__fp_round+0x20>
 7ec:	bf 2b       	or	r27, r31
 7ee:	11 f4       	brne	.+4      	; 0x7f4 <__fp_round+0x18>
 7f0:	60 ff       	sbrs	r22, 0
 7f2:	04 c0       	rjmp	.+8      	; 0x7fc <__fp_round+0x20>
 7f4:	6f 5f       	subi	r22, 0xFF	; 255
 7f6:	7f 4f       	sbci	r23, 0xFF	; 255
 7f8:	8f 4f       	sbci	r24, 0xFF	; 255
 7fa:	9f 4f       	sbci	r25, 0xFF	; 255
 7fc:	08 95       	ret

000007fe <__fp_split3>:
 7fe:	57 fd       	sbrc	r21, 7
 800:	90 58       	subi	r25, 0x80	; 128
 802:	44 0f       	add	r20, r20
 804:	55 1f       	adc	r21, r21
 806:	59 f0       	breq	.+22     	; 0x81e <__fp_splitA+0x10>
 808:	5f 3f       	cpi	r21, 0xFF	; 255
 80a:	71 f0       	breq	.+28     	; 0x828 <__fp_splitA+0x1a>
 80c:	47 95       	ror	r20

0000080e <__fp_splitA>:
 80e:	88 0f       	add	r24, r24
 810:	97 fb       	bst	r25, 7
 812:	99 1f       	adc	r25, r25
 814:	61 f0       	breq	.+24     	; 0x82e <__fp_splitA+0x20>
 816:	9f 3f       	cpi	r25, 0xFF	; 255
 818:	79 f0       	breq	.+30     	; 0x838 <__fp_splitA+0x2a>
 81a:	87 95       	ror	r24
 81c:	08 95       	ret
 81e:	12 16       	cp	r1, r18
 820:	13 06       	cpc	r1, r19
 822:	14 06       	cpc	r1, r20
 824:	55 1f       	adc	r21, r21
 826:	f2 cf       	rjmp	.-28     	; 0x80c <__fp_split3+0xe>
 828:	46 95       	lsr	r20
 82a:	f1 df       	rcall	.-30     	; 0x80e <__fp_splitA>
 82c:	08 c0       	rjmp	.+16     	; 0x83e <__fp_splitA+0x30>
 82e:	16 16       	cp	r1, r22
 830:	17 06       	cpc	r1, r23
 832:	18 06       	cpc	r1, r24
 834:	99 1f       	adc	r25, r25
 836:	f1 cf       	rjmp	.-30     	; 0x81a <__fp_splitA+0xc>
 838:	86 95       	lsr	r24
 83a:	71 05       	cpc	r23, r1
 83c:	61 05       	cpc	r22, r1
 83e:	08 94       	sec
 840:	08 95       	ret

00000842 <__fp_zero>:
 842:	e8 94       	clt

00000844 <__fp_szero>:
 844:	bb 27       	eor	r27, r27
 846:	66 27       	eor	r22, r22
 848:	77 27       	eor	r23, r23
 84a:	cb 01       	movw	r24, r22
 84c:	97 f9       	bld	r25, 7
 84e:	08 95       	ret

00000850 <__gesf2>:
 850:	66 d0       	rcall	.+204    	; 0x91e <__fp_cmp>
 852:	08 f4       	brcc	.+2      	; 0x856 <__gesf2+0x6>
 854:	8f ef       	ldi	r24, 0xFF	; 255
 856:	08 95       	ret

00000858 <__mulsf3>:
 858:	0b d0       	rcall	.+22     	; 0x870 <__mulsf3x>
 85a:	c0 cf       	rjmp	.-128    	; 0x7dc <__fp_round>
 85c:	b1 df       	rcall	.-158    	; 0x7c0 <__fp_pscA>
 85e:	28 f0       	brcs	.+10     	; 0x86a <__mulsf3+0x12>
 860:	b6 df       	rcall	.-148    	; 0x7ce <__fp_pscB>
 862:	18 f0       	brcs	.+6      	; 0x86a <__mulsf3+0x12>
 864:	95 23       	and	r25, r21
 866:	09 f0       	breq	.+2      	; 0x86a <__mulsf3+0x12>
 868:	a2 cf       	rjmp	.-188    	; 0x7ae <__fp_inf>
 86a:	a7 cf       	rjmp	.-178    	; 0x7ba <__fp_nan>
 86c:	11 24       	eor	r1, r1
 86e:	ea cf       	rjmp	.-44     	; 0x844 <__fp_szero>

00000870 <__mulsf3x>:
 870:	c6 df       	rcall	.-116    	; 0x7fe <__fp_split3>
 872:	a0 f3       	brcs	.-24     	; 0x85c <__mulsf3+0x4>

00000874 <__mulsf3_pse>:
 874:	95 9f       	mul	r25, r21
 876:	d1 f3       	breq	.-12     	; 0x86c <__mulsf3+0x14>
 878:	95 0f       	add	r25, r21
 87a:	50 e0       	ldi	r21, 0x00	; 0
 87c:	55 1f       	adc	r21, r21
 87e:	62 9f       	mul	r22, r18
 880:	f0 01       	movw	r30, r0
 882:	72 9f       	mul	r23, r18
 884:	bb 27       	eor	r27, r27
 886:	f0 0d       	add	r31, r0
 888:	b1 1d       	adc	r27, r1
 88a:	63 9f       	mul	r22, r19
 88c:	aa 27       	eor	r26, r26
 88e:	f0 0d       	add	r31, r0
 890:	b1 1d       	adc	r27, r1
 892:	aa 1f       	adc	r26, r26
 894:	64 9f       	mul	r22, r20
 896:	66 27       	eor	r22, r22
 898:	b0 0d       	add	r27, r0
 89a:	a1 1d       	adc	r26, r1
 89c:	66 1f       	adc	r22, r22
 89e:	82 9f       	mul	r24, r18
 8a0:	22 27       	eor	r18, r18
 8a2:	b0 0d       	add	r27, r0
 8a4:	a1 1d       	adc	r26, r1
 8a6:	62 1f       	adc	r22, r18
 8a8:	73 9f       	mul	r23, r19
 8aa:	b0 0d       	add	r27, r0
 8ac:	a1 1d       	adc	r26, r1
 8ae:	62 1f       	adc	r22, r18
 8b0:	83 9f       	mul	r24, r19
 8b2:	a0 0d       	add	r26, r0
 8b4:	61 1d       	adc	r22, r1
 8b6:	22 1f       	adc	r18, r18
 8b8:	74 9f       	mul	r23, r20
 8ba:	33 27       	eor	r19, r19
 8bc:	a0 0d       	add	r26, r0
 8be:	61 1d       	adc	r22, r1
 8c0:	23 1f       	adc	r18, r19
 8c2:	84 9f       	mul	r24, r20
 8c4:	60 0d       	add	r22, r0
 8c6:	21 1d       	adc	r18, r1
 8c8:	82 2f       	mov	r24, r18
 8ca:	76 2f       	mov	r23, r22
 8cc:	6a 2f       	mov	r22, r26
 8ce:	11 24       	eor	r1, r1
 8d0:	9f 57       	subi	r25, 0x7F	; 127
 8d2:	50 40       	sbci	r21, 0x00	; 0
 8d4:	8a f0       	brmi	.+34     	; 0x8f8 <__mulsf3_pse+0x84>
 8d6:	e1 f0       	breq	.+56     	; 0x910 <__mulsf3_pse+0x9c>
 8d8:	88 23       	and	r24, r24
 8da:	4a f0       	brmi	.+18     	; 0x8ee <__mulsf3_pse+0x7a>
 8dc:	ee 0f       	add	r30, r30
 8de:	ff 1f       	adc	r31, r31
 8e0:	bb 1f       	adc	r27, r27
 8e2:	66 1f       	adc	r22, r22
 8e4:	77 1f       	adc	r23, r23
 8e6:	88 1f       	adc	r24, r24
 8e8:	91 50       	subi	r25, 0x01	; 1
 8ea:	50 40       	sbci	r21, 0x00	; 0
 8ec:	a9 f7       	brne	.-22     	; 0x8d8 <__mulsf3_pse+0x64>
 8ee:	9e 3f       	cpi	r25, 0xFE	; 254
 8f0:	51 05       	cpc	r21, r1
 8f2:	70 f0       	brcs	.+28     	; 0x910 <__mulsf3_pse+0x9c>
 8f4:	5c cf       	rjmp	.-328    	; 0x7ae <__fp_inf>
 8f6:	a6 cf       	rjmp	.-180    	; 0x844 <__fp_szero>
 8f8:	5f 3f       	cpi	r21, 0xFF	; 255
 8fa:	ec f3       	brlt	.-6      	; 0x8f6 <__mulsf3_pse+0x82>
 8fc:	98 3e       	cpi	r25, 0xE8	; 232
 8fe:	dc f3       	brlt	.-10     	; 0x8f6 <__mulsf3_pse+0x82>
 900:	86 95       	lsr	r24
 902:	77 95       	ror	r23
 904:	67 95       	ror	r22
 906:	b7 95       	ror	r27
 908:	f7 95       	ror	r31
 90a:	e7 95       	ror	r30
 90c:	9f 5f       	subi	r25, 0xFF	; 255
 90e:	c1 f7       	brne	.-16     	; 0x900 <__mulsf3_pse+0x8c>
 910:	fe 2b       	or	r31, r30
 912:	88 0f       	add	r24, r24
 914:	91 1d       	adc	r25, r1
 916:	96 95       	lsr	r25
 918:	87 95       	ror	r24
 91a:	97 f9       	bld	r25, 7
 91c:	08 95       	ret

0000091e <__fp_cmp>:
 91e:	99 0f       	add	r25, r25
 920:	00 08       	sbc	r0, r0
 922:	55 0f       	add	r21, r21
 924:	aa 0b       	sbc	r26, r26
 926:	e0 e8       	ldi	r30, 0x80	; 128
 928:	fe ef       	ldi	r31, 0xFE	; 254
 92a:	16 16       	cp	r1, r22
 92c:	17 06       	cpc	r1, r23
 92e:	e8 07       	cpc	r30, r24
 930:	f9 07       	cpc	r31, r25
 932:	c0 f0       	brcs	.+48     	; 0x964 <__fp_cmp+0x46>
 934:	12 16       	cp	r1, r18
 936:	13 06       	cpc	r1, r19
 938:	e4 07       	cpc	r30, r20
 93a:	f5 07       	cpc	r31, r21
 93c:	98 f0       	brcs	.+38     	; 0x964 <__fp_cmp+0x46>
 93e:	62 1b       	sub	r22, r18
 940:	73 0b       	sbc	r23, r19
 942:	84 0b       	sbc	r24, r20
 944:	95 0b       	sbc	r25, r21
 946:	39 f4       	brne	.+14     	; 0x956 <__fp_cmp+0x38>
 948:	0a 26       	eor	r0, r26
 94a:	61 f0       	breq	.+24     	; 0x964 <__fp_cmp+0x46>
 94c:	23 2b       	or	r18, r19
 94e:	24 2b       	or	r18, r20
 950:	25 2b       	or	r18, r21
 952:	21 f4       	brne	.+8      	; 0x95c <__fp_cmp+0x3e>
 954:	08 95       	ret
 956:	0a 26       	eor	r0, r26
 958:	09 f4       	brne	.+2      	; 0x95c <__fp_cmp+0x3e>
 95a:	a1 40       	sbci	r26, 0x01	; 1
 95c:	a6 95       	lsr	r26
 95e:	8f ef       	ldi	r24, 0xFF	; 255
 960:	81 1d       	adc	r24, r1
 962:	81 1d       	adc	r24, r1
 964:	08 95       	ret

00000966 <strcmp>:
 966:	fb 01       	movw	r30, r22
 968:	dc 01       	movw	r26, r24
 96a:	8d 91       	ld	r24, X+
 96c:	01 90       	ld	r0, Z+
 96e:	80 19       	sub	r24, r0
 970:	01 10       	cpse	r0, r1
 972:	d9 f3       	breq	.-10     	; 0x96a <strcmp+0x4>
 974:	99 0b       	sbc	r25, r25
 976:	08 95       	ret

00000978 <sprintf>:
 978:	0f 93       	push	r16
 97a:	1f 93       	push	r17
 97c:	cf 93       	push	r28
 97e:	df 93       	push	r29
 980:	cd b7       	in	r28, 0x3d	; 61
 982:	de b7       	in	r29, 0x3e	; 62
 984:	2e 97       	sbiw	r28, 0x0e	; 14
 986:	0f b6       	in	r0, 0x3f	; 63
 988:	f8 94       	cli
 98a:	de bf       	out	0x3e, r29	; 62
 98c:	0f be       	out	0x3f, r0	; 63
 98e:	cd bf       	out	0x3d, r28	; 61
 990:	0d 89       	ldd	r16, Y+21	; 0x15
 992:	1e 89       	ldd	r17, Y+22	; 0x16
 994:	86 e0       	ldi	r24, 0x06	; 6
 996:	8c 83       	std	Y+4, r24	; 0x04
 998:	1a 83       	std	Y+2, r17	; 0x02
 99a:	09 83       	std	Y+1, r16	; 0x01
 99c:	8f ef       	ldi	r24, 0xFF	; 255
 99e:	9f e7       	ldi	r25, 0x7F	; 127
 9a0:	9e 83       	std	Y+6, r25	; 0x06
 9a2:	8d 83       	std	Y+5, r24	; 0x05
 9a4:	ae 01       	movw	r20, r28
 9a6:	47 5e       	subi	r20, 0xE7	; 231
 9a8:	5f 4f       	sbci	r21, 0xFF	; 255
 9aa:	6f 89       	ldd	r22, Y+23	; 0x17
 9ac:	78 8d       	ldd	r23, Y+24	; 0x18
 9ae:	ce 01       	movw	r24, r28
 9b0:	01 96       	adiw	r24, 0x01	; 1
 9b2:	10 d0       	rcall	.+32     	; 0x9d4 <vfprintf>
 9b4:	ef 81       	ldd	r30, Y+7	; 0x07
 9b6:	f8 85       	ldd	r31, Y+8	; 0x08
 9b8:	e0 0f       	add	r30, r16
 9ba:	f1 1f       	adc	r31, r17
 9bc:	10 82       	st	Z, r1
 9be:	2e 96       	adiw	r28, 0x0e	; 14
 9c0:	0f b6       	in	r0, 0x3f	; 63
 9c2:	f8 94       	cli
 9c4:	de bf       	out	0x3e, r29	; 62
 9c6:	0f be       	out	0x3f, r0	; 63
 9c8:	cd bf       	out	0x3d, r28	; 61
 9ca:	df 91       	pop	r29
 9cc:	cf 91       	pop	r28
 9ce:	1f 91       	pop	r17
 9d0:	0f 91       	pop	r16
 9d2:	08 95       	ret

000009d4 <vfprintf>:
 9d4:	2f 92       	push	r2
 9d6:	3f 92       	push	r3
 9d8:	4f 92       	push	r4
 9da:	5f 92       	push	r5
 9dc:	6f 92       	push	r6
 9de:	7f 92       	push	r7
 9e0:	8f 92       	push	r8
 9e2:	9f 92       	push	r9
 9e4:	af 92       	push	r10
 9e6:	bf 92       	push	r11
 9e8:	cf 92       	push	r12
 9ea:	df 92       	push	r13
 9ec:	ef 92       	push	r14
 9ee:	ff 92       	push	r15
 9f0:	0f 93       	push	r16
 9f2:	1f 93       	push	r17
 9f4:	cf 93       	push	r28
 9f6:	df 93       	push	r29
 9f8:	cd b7       	in	r28, 0x3d	; 61
 9fa:	de b7       	in	r29, 0x3e	; 62
 9fc:	2b 97       	sbiw	r28, 0x0b	; 11
 9fe:	0f b6       	in	r0, 0x3f	; 63
 a00:	f8 94       	cli
 a02:	de bf       	out	0x3e, r29	; 62
 a04:	0f be       	out	0x3f, r0	; 63
 a06:	cd bf       	out	0x3d, r28	; 61
 a08:	6c 01       	movw	r12, r24
 a0a:	7b 01       	movw	r14, r22
 a0c:	8a 01       	movw	r16, r20
 a0e:	fc 01       	movw	r30, r24
 a10:	17 82       	std	Z+7, r1	; 0x07
 a12:	16 82       	std	Z+6, r1	; 0x06
 a14:	83 81       	ldd	r24, Z+3	; 0x03
 a16:	81 ff       	sbrs	r24, 1
 a18:	bf c1       	rjmp	.+894    	; 0xd98 <vfprintf+0x3c4>
 a1a:	ce 01       	movw	r24, r28
 a1c:	01 96       	adiw	r24, 0x01	; 1
 a1e:	3c 01       	movw	r6, r24
 a20:	f6 01       	movw	r30, r12
 a22:	93 81       	ldd	r25, Z+3	; 0x03
 a24:	f7 01       	movw	r30, r14
 a26:	93 fd       	sbrc	r25, 3
 a28:	85 91       	lpm	r24, Z+
 a2a:	93 ff       	sbrs	r25, 3
 a2c:	81 91       	ld	r24, Z+
 a2e:	7f 01       	movw	r14, r30
 a30:	88 23       	and	r24, r24
 a32:	09 f4       	brne	.+2      	; 0xa36 <vfprintf+0x62>
 a34:	ad c1       	rjmp	.+858    	; 0xd90 <vfprintf+0x3bc>
 a36:	85 32       	cpi	r24, 0x25	; 37
 a38:	39 f4       	brne	.+14     	; 0xa48 <vfprintf+0x74>
 a3a:	93 fd       	sbrc	r25, 3
 a3c:	85 91       	lpm	r24, Z+
 a3e:	93 ff       	sbrs	r25, 3
 a40:	81 91       	ld	r24, Z+
 a42:	7f 01       	movw	r14, r30
 a44:	85 32       	cpi	r24, 0x25	; 37
 a46:	21 f4       	brne	.+8      	; 0xa50 <vfprintf+0x7c>
 a48:	b6 01       	movw	r22, r12
 a4a:	90 e0       	ldi	r25, 0x00	; 0
 a4c:	d6 d1       	rcall	.+940    	; 0xdfa <fputc>
 a4e:	e8 cf       	rjmp	.-48     	; 0xa20 <vfprintf+0x4c>
 a50:	91 2c       	mov	r9, r1
 a52:	21 2c       	mov	r2, r1
 a54:	31 2c       	mov	r3, r1
 a56:	ff e1       	ldi	r31, 0x1F	; 31
 a58:	f3 15       	cp	r31, r3
 a5a:	d8 f0       	brcs	.+54     	; 0xa92 <vfprintf+0xbe>
 a5c:	8b 32       	cpi	r24, 0x2B	; 43
 a5e:	79 f0       	breq	.+30     	; 0xa7e <vfprintf+0xaa>
 a60:	38 f4       	brcc	.+14     	; 0xa70 <vfprintf+0x9c>
 a62:	80 32       	cpi	r24, 0x20	; 32
 a64:	79 f0       	breq	.+30     	; 0xa84 <vfprintf+0xb0>
 a66:	83 32       	cpi	r24, 0x23	; 35
 a68:	a1 f4       	brne	.+40     	; 0xa92 <vfprintf+0xbe>
 a6a:	23 2d       	mov	r18, r3
 a6c:	20 61       	ori	r18, 0x10	; 16
 a6e:	1d c0       	rjmp	.+58     	; 0xaaa <vfprintf+0xd6>
 a70:	8d 32       	cpi	r24, 0x2D	; 45
 a72:	61 f0       	breq	.+24     	; 0xa8c <vfprintf+0xb8>
 a74:	80 33       	cpi	r24, 0x30	; 48
 a76:	69 f4       	brne	.+26     	; 0xa92 <vfprintf+0xbe>
 a78:	23 2d       	mov	r18, r3
 a7a:	21 60       	ori	r18, 0x01	; 1
 a7c:	16 c0       	rjmp	.+44     	; 0xaaa <vfprintf+0xd6>
 a7e:	83 2d       	mov	r24, r3
 a80:	82 60       	ori	r24, 0x02	; 2
 a82:	38 2e       	mov	r3, r24
 a84:	e3 2d       	mov	r30, r3
 a86:	e4 60       	ori	r30, 0x04	; 4
 a88:	3e 2e       	mov	r3, r30
 a8a:	2a c0       	rjmp	.+84     	; 0xae0 <vfprintf+0x10c>
 a8c:	f3 2d       	mov	r31, r3
 a8e:	f8 60       	ori	r31, 0x08	; 8
 a90:	1d c0       	rjmp	.+58     	; 0xacc <vfprintf+0xf8>
 a92:	37 fc       	sbrc	r3, 7
 a94:	2d c0       	rjmp	.+90     	; 0xaf0 <vfprintf+0x11c>
 a96:	20 ed       	ldi	r18, 0xD0	; 208
 a98:	28 0f       	add	r18, r24
 a9a:	2a 30       	cpi	r18, 0x0A	; 10
 a9c:	40 f0       	brcs	.+16     	; 0xaae <vfprintf+0xda>
 a9e:	8e 32       	cpi	r24, 0x2E	; 46
 aa0:	b9 f4       	brne	.+46     	; 0xad0 <vfprintf+0xfc>
 aa2:	36 fc       	sbrc	r3, 6
 aa4:	75 c1       	rjmp	.+746    	; 0xd90 <vfprintf+0x3bc>
 aa6:	23 2d       	mov	r18, r3
 aa8:	20 64       	ori	r18, 0x40	; 64
 aaa:	32 2e       	mov	r3, r18
 aac:	19 c0       	rjmp	.+50     	; 0xae0 <vfprintf+0x10c>
 aae:	36 fe       	sbrs	r3, 6
 ab0:	06 c0       	rjmp	.+12     	; 0xabe <vfprintf+0xea>
 ab2:	8a e0       	ldi	r24, 0x0A	; 10
 ab4:	98 9e       	mul	r9, r24
 ab6:	20 0d       	add	r18, r0
 ab8:	11 24       	eor	r1, r1
 aba:	92 2e       	mov	r9, r18
 abc:	11 c0       	rjmp	.+34     	; 0xae0 <vfprintf+0x10c>
 abe:	ea e0       	ldi	r30, 0x0A	; 10
 ac0:	2e 9e       	mul	r2, r30
 ac2:	20 0d       	add	r18, r0
 ac4:	11 24       	eor	r1, r1
 ac6:	22 2e       	mov	r2, r18
 ac8:	f3 2d       	mov	r31, r3
 aca:	f0 62       	ori	r31, 0x20	; 32
 acc:	3f 2e       	mov	r3, r31
 ace:	08 c0       	rjmp	.+16     	; 0xae0 <vfprintf+0x10c>
 ad0:	8c 36       	cpi	r24, 0x6C	; 108
 ad2:	21 f4       	brne	.+8      	; 0xadc <vfprintf+0x108>
 ad4:	83 2d       	mov	r24, r3
 ad6:	80 68       	ori	r24, 0x80	; 128
 ad8:	38 2e       	mov	r3, r24
 ada:	02 c0       	rjmp	.+4      	; 0xae0 <vfprintf+0x10c>
 adc:	88 36       	cpi	r24, 0x68	; 104
 ade:	41 f4       	brne	.+16     	; 0xaf0 <vfprintf+0x11c>
 ae0:	f7 01       	movw	r30, r14
 ae2:	93 fd       	sbrc	r25, 3
 ae4:	85 91       	lpm	r24, Z+
 ae6:	93 ff       	sbrs	r25, 3
 ae8:	81 91       	ld	r24, Z+
 aea:	7f 01       	movw	r14, r30
 aec:	81 11       	cpse	r24, r1
 aee:	b3 cf       	rjmp	.-154    	; 0xa56 <vfprintf+0x82>
 af0:	98 2f       	mov	r25, r24
 af2:	9f 7d       	andi	r25, 0xDF	; 223
 af4:	95 54       	subi	r25, 0x45	; 69
 af6:	93 30       	cpi	r25, 0x03	; 3
 af8:	28 f4       	brcc	.+10     	; 0xb04 <vfprintf+0x130>
 afa:	0c 5f       	subi	r16, 0xFC	; 252
 afc:	1f 4f       	sbci	r17, 0xFF	; 255
 afe:	9f e3       	ldi	r25, 0x3F	; 63
 b00:	99 83       	std	Y+1, r25	; 0x01
 b02:	0d c0       	rjmp	.+26     	; 0xb1e <vfprintf+0x14a>
 b04:	83 36       	cpi	r24, 0x63	; 99
 b06:	31 f0       	breq	.+12     	; 0xb14 <vfprintf+0x140>
 b08:	83 37       	cpi	r24, 0x73	; 115
 b0a:	71 f0       	breq	.+28     	; 0xb28 <vfprintf+0x154>
 b0c:	83 35       	cpi	r24, 0x53	; 83
 b0e:	09 f0       	breq	.+2      	; 0xb12 <vfprintf+0x13e>
 b10:	55 c0       	rjmp	.+170    	; 0xbbc <vfprintf+0x1e8>
 b12:	20 c0       	rjmp	.+64     	; 0xb54 <vfprintf+0x180>
 b14:	f8 01       	movw	r30, r16
 b16:	80 81       	ld	r24, Z
 b18:	89 83       	std	Y+1, r24	; 0x01
 b1a:	0e 5f       	subi	r16, 0xFE	; 254
 b1c:	1f 4f       	sbci	r17, 0xFF	; 255
 b1e:	88 24       	eor	r8, r8
 b20:	83 94       	inc	r8
 b22:	91 2c       	mov	r9, r1
 b24:	53 01       	movw	r10, r6
 b26:	12 c0       	rjmp	.+36     	; 0xb4c <vfprintf+0x178>
 b28:	28 01       	movw	r4, r16
 b2a:	f2 e0       	ldi	r31, 0x02	; 2
 b2c:	4f 0e       	add	r4, r31
 b2e:	51 1c       	adc	r5, r1
 b30:	f8 01       	movw	r30, r16
 b32:	a0 80       	ld	r10, Z
 b34:	b1 80       	ldd	r11, Z+1	; 0x01
 b36:	36 fe       	sbrs	r3, 6
 b38:	03 c0       	rjmp	.+6      	; 0xb40 <vfprintf+0x16c>
 b3a:	69 2d       	mov	r22, r9
 b3c:	70 e0       	ldi	r23, 0x00	; 0
 b3e:	02 c0       	rjmp	.+4      	; 0xb44 <vfprintf+0x170>
 b40:	6f ef       	ldi	r22, 0xFF	; 255
 b42:	7f ef       	ldi	r23, 0xFF	; 255
 b44:	c5 01       	movw	r24, r10
 b46:	4e d1       	rcall	.+668    	; 0xde4 <strnlen>
 b48:	4c 01       	movw	r8, r24
 b4a:	82 01       	movw	r16, r4
 b4c:	f3 2d       	mov	r31, r3
 b4e:	ff 77       	andi	r31, 0x7F	; 127
 b50:	3f 2e       	mov	r3, r31
 b52:	15 c0       	rjmp	.+42     	; 0xb7e <vfprintf+0x1aa>
 b54:	28 01       	movw	r4, r16
 b56:	22 e0       	ldi	r18, 0x02	; 2
 b58:	42 0e       	add	r4, r18
 b5a:	51 1c       	adc	r5, r1
 b5c:	f8 01       	movw	r30, r16
 b5e:	a0 80       	ld	r10, Z
 b60:	b1 80       	ldd	r11, Z+1	; 0x01
 b62:	36 fe       	sbrs	r3, 6
 b64:	03 c0       	rjmp	.+6      	; 0xb6c <vfprintf+0x198>
 b66:	69 2d       	mov	r22, r9
 b68:	70 e0       	ldi	r23, 0x00	; 0
 b6a:	02 c0       	rjmp	.+4      	; 0xb70 <vfprintf+0x19c>
 b6c:	6f ef       	ldi	r22, 0xFF	; 255
 b6e:	7f ef       	ldi	r23, 0xFF	; 255
 b70:	c5 01       	movw	r24, r10
 b72:	2d d1       	rcall	.+602    	; 0xdce <strnlen_P>
 b74:	4c 01       	movw	r8, r24
 b76:	f3 2d       	mov	r31, r3
 b78:	f0 68       	ori	r31, 0x80	; 128
 b7a:	3f 2e       	mov	r3, r31
 b7c:	82 01       	movw	r16, r4
 b7e:	33 fc       	sbrc	r3, 3
 b80:	19 c0       	rjmp	.+50     	; 0xbb4 <vfprintf+0x1e0>
 b82:	82 2d       	mov	r24, r2
 b84:	90 e0       	ldi	r25, 0x00	; 0
 b86:	88 16       	cp	r8, r24
 b88:	99 06       	cpc	r9, r25
 b8a:	a0 f4       	brcc	.+40     	; 0xbb4 <vfprintf+0x1e0>
 b8c:	b6 01       	movw	r22, r12
 b8e:	80 e2       	ldi	r24, 0x20	; 32
 b90:	90 e0       	ldi	r25, 0x00	; 0
 b92:	33 d1       	rcall	.+614    	; 0xdfa <fputc>
 b94:	2a 94       	dec	r2
 b96:	f5 cf       	rjmp	.-22     	; 0xb82 <vfprintf+0x1ae>
 b98:	f5 01       	movw	r30, r10
 b9a:	37 fc       	sbrc	r3, 7
 b9c:	85 91       	lpm	r24, Z+
 b9e:	37 fe       	sbrs	r3, 7
 ba0:	81 91       	ld	r24, Z+
 ba2:	5f 01       	movw	r10, r30
 ba4:	b6 01       	movw	r22, r12
 ba6:	90 e0       	ldi	r25, 0x00	; 0
 ba8:	28 d1       	rcall	.+592    	; 0xdfa <fputc>
 baa:	21 10       	cpse	r2, r1
 bac:	2a 94       	dec	r2
 bae:	21 e0       	ldi	r18, 0x01	; 1
 bb0:	82 1a       	sub	r8, r18
 bb2:	91 08       	sbc	r9, r1
 bb4:	81 14       	cp	r8, r1
 bb6:	91 04       	cpc	r9, r1
 bb8:	79 f7       	brne	.-34     	; 0xb98 <vfprintf+0x1c4>
 bba:	e1 c0       	rjmp	.+450    	; 0xd7e <vfprintf+0x3aa>
 bbc:	84 36       	cpi	r24, 0x64	; 100
 bbe:	11 f0       	breq	.+4      	; 0xbc4 <vfprintf+0x1f0>
 bc0:	89 36       	cpi	r24, 0x69	; 105
 bc2:	39 f5       	brne	.+78     	; 0xc12 <vfprintf+0x23e>
 bc4:	f8 01       	movw	r30, r16
 bc6:	37 fe       	sbrs	r3, 7
 bc8:	07 c0       	rjmp	.+14     	; 0xbd8 <vfprintf+0x204>
 bca:	60 81       	ld	r22, Z
 bcc:	71 81       	ldd	r23, Z+1	; 0x01
 bce:	82 81       	ldd	r24, Z+2	; 0x02
 bd0:	93 81       	ldd	r25, Z+3	; 0x03
 bd2:	0c 5f       	subi	r16, 0xFC	; 252
 bd4:	1f 4f       	sbci	r17, 0xFF	; 255
 bd6:	08 c0       	rjmp	.+16     	; 0xbe8 <vfprintf+0x214>
 bd8:	60 81       	ld	r22, Z
 bda:	71 81       	ldd	r23, Z+1	; 0x01
 bdc:	07 2e       	mov	r0, r23
 bde:	00 0c       	add	r0, r0
 be0:	88 0b       	sbc	r24, r24
 be2:	99 0b       	sbc	r25, r25
 be4:	0e 5f       	subi	r16, 0xFE	; 254
 be6:	1f 4f       	sbci	r17, 0xFF	; 255
 be8:	f3 2d       	mov	r31, r3
 bea:	ff 76       	andi	r31, 0x6F	; 111
 bec:	3f 2e       	mov	r3, r31
 bee:	97 ff       	sbrs	r25, 7
 bf0:	09 c0       	rjmp	.+18     	; 0xc04 <vfprintf+0x230>
 bf2:	90 95       	com	r25
 bf4:	80 95       	com	r24
 bf6:	70 95       	com	r23
 bf8:	61 95       	neg	r22
 bfa:	7f 4f       	sbci	r23, 0xFF	; 255
 bfc:	8f 4f       	sbci	r24, 0xFF	; 255
 bfe:	9f 4f       	sbci	r25, 0xFF	; 255
 c00:	f0 68       	ori	r31, 0x80	; 128
 c02:	3f 2e       	mov	r3, r31
 c04:	2a e0       	ldi	r18, 0x0A	; 10
 c06:	30 e0       	ldi	r19, 0x00	; 0
 c08:	a3 01       	movw	r20, r6
 c0a:	33 d1       	rcall	.+614    	; 0xe72 <__ultoa_invert>
 c0c:	88 2e       	mov	r8, r24
 c0e:	86 18       	sub	r8, r6
 c10:	44 c0       	rjmp	.+136    	; 0xc9a <vfprintf+0x2c6>
 c12:	85 37       	cpi	r24, 0x75	; 117
 c14:	31 f4       	brne	.+12     	; 0xc22 <vfprintf+0x24e>
 c16:	23 2d       	mov	r18, r3
 c18:	2f 7e       	andi	r18, 0xEF	; 239
 c1a:	b2 2e       	mov	r11, r18
 c1c:	2a e0       	ldi	r18, 0x0A	; 10
 c1e:	30 e0       	ldi	r19, 0x00	; 0
 c20:	25 c0       	rjmp	.+74     	; 0xc6c <vfprintf+0x298>
 c22:	93 2d       	mov	r25, r3
 c24:	99 7f       	andi	r25, 0xF9	; 249
 c26:	b9 2e       	mov	r11, r25
 c28:	8f 36       	cpi	r24, 0x6F	; 111
 c2a:	c1 f0       	breq	.+48     	; 0xc5c <vfprintf+0x288>
 c2c:	18 f4       	brcc	.+6      	; 0xc34 <vfprintf+0x260>
 c2e:	88 35       	cpi	r24, 0x58	; 88
 c30:	79 f0       	breq	.+30     	; 0xc50 <vfprintf+0x27c>
 c32:	ae c0       	rjmp	.+348    	; 0xd90 <vfprintf+0x3bc>
 c34:	80 37       	cpi	r24, 0x70	; 112
 c36:	19 f0       	breq	.+6      	; 0xc3e <vfprintf+0x26a>
 c38:	88 37       	cpi	r24, 0x78	; 120
 c3a:	21 f0       	breq	.+8      	; 0xc44 <vfprintf+0x270>
 c3c:	a9 c0       	rjmp	.+338    	; 0xd90 <vfprintf+0x3bc>
 c3e:	e9 2f       	mov	r30, r25
 c40:	e0 61       	ori	r30, 0x10	; 16
 c42:	be 2e       	mov	r11, r30
 c44:	b4 fe       	sbrs	r11, 4
 c46:	0d c0       	rjmp	.+26     	; 0xc62 <vfprintf+0x28e>
 c48:	fb 2d       	mov	r31, r11
 c4a:	f4 60       	ori	r31, 0x04	; 4
 c4c:	bf 2e       	mov	r11, r31
 c4e:	09 c0       	rjmp	.+18     	; 0xc62 <vfprintf+0x28e>
 c50:	34 fe       	sbrs	r3, 4
 c52:	0a c0       	rjmp	.+20     	; 0xc68 <vfprintf+0x294>
 c54:	29 2f       	mov	r18, r25
 c56:	26 60       	ori	r18, 0x06	; 6
 c58:	b2 2e       	mov	r11, r18
 c5a:	06 c0       	rjmp	.+12     	; 0xc68 <vfprintf+0x294>
 c5c:	28 e0       	ldi	r18, 0x08	; 8
 c5e:	30 e0       	ldi	r19, 0x00	; 0
 c60:	05 c0       	rjmp	.+10     	; 0xc6c <vfprintf+0x298>
 c62:	20 e1       	ldi	r18, 0x10	; 16
 c64:	30 e0       	ldi	r19, 0x00	; 0
 c66:	02 c0       	rjmp	.+4      	; 0xc6c <vfprintf+0x298>
 c68:	20 e1       	ldi	r18, 0x10	; 16
 c6a:	32 e0       	ldi	r19, 0x02	; 2
 c6c:	f8 01       	movw	r30, r16
 c6e:	b7 fe       	sbrs	r11, 7
 c70:	07 c0       	rjmp	.+14     	; 0xc80 <vfprintf+0x2ac>
 c72:	60 81       	ld	r22, Z
 c74:	71 81       	ldd	r23, Z+1	; 0x01
 c76:	82 81       	ldd	r24, Z+2	; 0x02
 c78:	93 81       	ldd	r25, Z+3	; 0x03
 c7a:	0c 5f       	subi	r16, 0xFC	; 252
 c7c:	1f 4f       	sbci	r17, 0xFF	; 255
 c7e:	06 c0       	rjmp	.+12     	; 0xc8c <vfprintf+0x2b8>
 c80:	60 81       	ld	r22, Z
 c82:	71 81       	ldd	r23, Z+1	; 0x01
 c84:	80 e0       	ldi	r24, 0x00	; 0
 c86:	90 e0       	ldi	r25, 0x00	; 0
 c88:	0e 5f       	subi	r16, 0xFE	; 254
 c8a:	1f 4f       	sbci	r17, 0xFF	; 255
 c8c:	a3 01       	movw	r20, r6
 c8e:	f1 d0       	rcall	.+482    	; 0xe72 <__ultoa_invert>
 c90:	88 2e       	mov	r8, r24
 c92:	86 18       	sub	r8, r6
 c94:	fb 2d       	mov	r31, r11
 c96:	ff 77       	andi	r31, 0x7F	; 127
 c98:	3f 2e       	mov	r3, r31
 c9a:	36 fe       	sbrs	r3, 6
 c9c:	0d c0       	rjmp	.+26     	; 0xcb8 <vfprintf+0x2e4>
 c9e:	23 2d       	mov	r18, r3
 ca0:	2e 7f       	andi	r18, 0xFE	; 254
 ca2:	a2 2e       	mov	r10, r18
 ca4:	89 14       	cp	r8, r9
 ca6:	58 f4       	brcc	.+22     	; 0xcbe <vfprintf+0x2ea>
 ca8:	34 fe       	sbrs	r3, 4
 caa:	0b c0       	rjmp	.+22     	; 0xcc2 <vfprintf+0x2ee>
 cac:	32 fc       	sbrc	r3, 2
 cae:	09 c0       	rjmp	.+18     	; 0xcc2 <vfprintf+0x2ee>
 cb0:	83 2d       	mov	r24, r3
 cb2:	8e 7e       	andi	r24, 0xEE	; 238
 cb4:	a8 2e       	mov	r10, r24
 cb6:	05 c0       	rjmp	.+10     	; 0xcc2 <vfprintf+0x2ee>
 cb8:	b8 2c       	mov	r11, r8
 cba:	a3 2c       	mov	r10, r3
 cbc:	03 c0       	rjmp	.+6      	; 0xcc4 <vfprintf+0x2f0>
 cbe:	b8 2c       	mov	r11, r8
 cc0:	01 c0       	rjmp	.+2      	; 0xcc4 <vfprintf+0x2f0>
 cc2:	b9 2c       	mov	r11, r9
 cc4:	a4 fe       	sbrs	r10, 4
 cc6:	0f c0       	rjmp	.+30     	; 0xce6 <vfprintf+0x312>
 cc8:	fe 01       	movw	r30, r28
 cca:	e8 0d       	add	r30, r8
 ccc:	f1 1d       	adc	r31, r1
 cce:	80 81       	ld	r24, Z
 cd0:	80 33       	cpi	r24, 0x30	; 48
 cd2:	21 f4       	brne	.+8      	; 0xcdc <vfprintf+0x308>
 cd4:	9a 2d       	mov	r25, r10
 cd6:	99 7e       	andi	r25, 0xE9	; 233
 cd8:	a9 2e       	mov	r10, r25
 cda:	09 c0       	rjmp	.+18     	; 0xcee <vfprintf+0x31a>
 cdc:	a2 fe       	sbrs	r10, 2
 cde:	06 c0       	rjmp	.+12     	; 0xcec <vfprintf+0x318>
 ce0:	b3 94       	inc	r11
 ce2:	b3 94       	inc	r11
 ce4:	04 c0       	rjmp	.+8      	; 0xcee <vfprintf+0x31a>
 ce6:	8a 2d       	mov	r24, r10
 ce8:	86 78       	andi	r24, 0x86	; 134
 cea:	09 f0       	breq	.+2      	; 0xcee <vfprintf+0x31a>
 cec:	b3 94       	inc	r11
 cee:	a3 fc       	sbrc	r10, 3
 cf0:	10 c0       	rjmp	.+32     	; 0xd12 <vfprintf+0x33e>
 cf2:	a0 fe       	sbrs	r10, 0
 cf4:	06 c0       	rjmp	.+12     	; 0xd02 <vfprintf+0x32e>
 cf6:	b2 14       	cp	r11, r2
 cf8:	80 f4       	brcc	.+32     	; 0xd1a <vfprintf+0x346>
 cfa:	28 0c       	add	r2, r8
 cfc:	92 2c       	mov	r9, r2
 cfe:	9b 18       	sub	r9, r11
 d00:	0d c0       	rjmp	.+26     	; 0xd1c <vfprintf+0x348>
 d02:	b2 14       	cp	r11, r2
 d04:	58 f4       	brcc	.+22     	; 0xd1c <vfprintf+0x348>
 d06:	b6 01       	movw	r22, r12
 d08:	80 e2       	ldi	r24, 0x20	; 32
 d0a:	90 e0       	ldi	r25, 0x00	; 0
 d0c:	76 d0       	rcall	.+236    	; 0xdfa <fputc>
 d0e:	b3 94       	inc	r11
 d10:	f8 cf       	rjmp	.-16     	; 0xd02 <vfprintf+0x32e>
 d12:	b2 14       	cp	r11, r2
 d14:	18 f4       	brcc	.+6      	; 0xd1c <vfprintf+0x348>
 d16:	2b 18       	sub	r2, r11
 d18:	02 c0       	rjmp	.+4      	; 0xd1e <vfprintf+0x34a>
 d1a:	98 2c       	mov	r9, r8
 d1c:	21 2c       	mov	r2, r1
 d1e:	a4 fe       	sbrs	r10, 4
 d20:	0f c0       	rjmp	.+30     	; 0xd40 <vfprintf+0x36c>
 d22:	b6 01       	movw	r22, r12
 d24:	80 e3       	ldi	r24, 0x30	; 48
 d26:	90 e0       	ldi	r25, 0x00	; 0
 d28:	68 d0       	rcall	.+208    	; 0xdfa <fputc>
 d2a:	a2 fe       	sbrs	r10, 2
 d2c:	16 c0       	rjmp	.+44     	; 0xd5a <vfprintf+0x386>
 d2e:	a1 fc       	sbrc	r10, 1
 d30:	03 c0       	rjmp	.+6      	; 0xd38 <vfprintf+0x364>
 d32:	88 e7       	ldi	r24, 0x78	; 120
 d34:	90 e0       	ldi	r25, 0x00	; 0
 d36:	02 c0       	rjmp	.+4      	; 0xd3c <vfprintf+0x368>
 d38:	88 e5       	ldi	r24, 0x58	; 88
 d3a:	90 e0       	ldi	r25, 0x00	; 0
 d3c:	b6 01       	movw	r22, r12
 d3e:	0c c0       	rjmp	.+24     	; 0xd58 <vfprintf+0x384>
 d40:	8a 2d       	mov	r24, r10
 d42:	86 78       	andi	r24, 0x86	; 134
 d44:	51 f0       	breq	.+20     	; 0xd5a <vfprintf+0x386>
 d46:	a1 fe       	sbrs	r10, 1
 d48:	02 c0       	rjmp	.+4      	; 0xd4e <vfprintf+0x37a>
 d4a:	8b e2       	ldi	r24, 0x2B	; 43
 d4c:	01 c0       	rjmp	.+2      	; 0xd50 <vfprintf+0x37c>
 d4e:	80 e2       	ldi	r24, 0x20	; 32
 d50:	a7 fc       	sbrc	r10, 7
 d52:	8d e2       	ldi	r24, 0x2D	; 45
 d54:	b6 01       	movw	r22, r12
 d56:	90 e0       	ldi	r25, 0x00	; 0
 d58:	50 d0       	rcall	.+160    	; 0xdfa <fputc>
 d5a:	89 14       	cp	r8, r9
 d5c:	30 f4       	brcc	.+12     	; 0xd6a <vfprintf+0x396>
 d5e:	b6 01       	movw	r22, r12
 d60:	80 e3       	ldi	r24, 0x30	; 48
 d62:	90 e0       	ldi	r25, 0x00	; 0
 d64:	4a d0       	rcall	.+148    	; 0xdfa <fputc>
 d66:	9a 94       	dec	r9
 d68:	f8 cf       	rjmp	.-16     	; 0xd5a <vfprintf+0x386>
 d6a:	8a 94       	dec	r8
 d6c:	f3 01       	movw	r30, r6
 d6e:	e8 0d       	add	r30, r8
 d70:	f1 1d       	adc	r31, r1
 d72:	80 81       	ld	r24, Z
 d74:	b6 01       	movw	r22, r12
 d76:	90 e0       	ldi	r25, 0x00	; 0
 d78:	40 d0       	rcall	.+128    	; 0xdfa <fputc>
 d7a:	81 10       	cpse	r8, r1
 d7c:	f6 cf       	rjmp	.-20     	; 0xd6a <vfprintf+0x396>
 d7e:	22 20       	and	r2, r2
 d80:	09 f4       	brne	.+2      	; 0xd84 <vfprintf+0x3b0>
 d82:	4e ce       	rjmp	.-868    	; 0xa20 <vfprintf+0x4c>
 d84:	b6 01       	movw	r22, r12
 d86:	80 e2       	ldi	r24, 0x20	; 32
 d88:	90 e0       	ldi	r25, 0x00	; 0
 d8a:	37 d0       	rcall	.+110    	; 0xdfa <fputc>
 d8c:	2a 94       	dec	r2
 d8e:	f7 cf       	rjmp	.-18     	; 0xd7e <vfprintf+0x3aa>
 d90:	f6 01       	movw	r30, r12
 d92:	86 81       	ldd	r24, Z+6	; 0x06
 d94:	97 81       	ldd	r25, Z+7	; 0x07
 d96:	02 c0       	rjmp	.+4      	; 0xd9c <vfprintf+0x3c8>
 d98:	8f ef       	ldi	r24, 0xFF	; 255
 d9a:	9f ef       	ldi	r25, 0xFF	; 255
 d9c:	2b 96       	adiw	r28, 0x0b	; 11
 d9e:	0f b6       	in	r0, 0x3f	; 63
 da0:	f8 94       	cli
 da2:	de bf       	out	0x3e, r29	; 62
 da4:	0f be       	out	0x3f, r0	; 63
 da6:	cd bf       	out	0x3d, r28	; 61
 da8:	df 91       	pop	r29
 daa:	cf 91       	pop	r28
 dac:	1f 91       	pop	r17
 dae:	0f 91       	pop	r16
 db0:	ff 90       	pop	r15
 db2:	ef 90       	pop	r14
 db4:	df 90       	pop	r13
 db6:	cf 90       	pop	r12
 db8:	bf 90       	pop	r11
 dba:	af 90       	pop	r10
 dbc:	9f 90       	pop	r9
 dbe:	8f 90       	pop	r8
 dc0:	7f 90       	pop	r7
 dc2:	6f 90       	pop	r6
 dc4:	5f 90       	pop	r5
 dc6:	4f 90       	pop	r4
 dc8:	3f 90       	pop	r3
 dca:	2f 90       	pop	r2
 dcc:	08 95       	ret

00000dce <strnlen_P>:
 dce:	fc 01       	movw	r30, r24
 dd0:	05 90       	lpm	r0, Z+
 dd2:	61 50       	subi	r22, 0x01	; 1
 dd4:	70 40       	sbci	r23, 0x00	; 0
 dd6:	01 10       	cpse	r0, r1
 dd8:	d8 f7       	brcc	.-10     	; 0xdd0 <strnlen_P+0x2>
 dda:	80 95       	com	r24
 ddc:	90 95       	com	r25
 dde:	8e 0f       	add	r24, r30
 de0:	9f 1f       	adc	r25, r31
 de2:	08 95       	ret

00000de4 <strnlen>:
 de4:	fc 01       	movw	r30, r24
 de6:	61 50       	subi	r22, 0x01	; 1
 de8:	70 40       	sbci	r23, 0x00	; 0
 dea:	01 90       	ld	r0, Z+
 dec:	01 10       	cpse	r0, r1
 dee:	d8 f7       	brcc	.-10     	; 0xde6 <strnlen+0x2>
 df0:	80 95       	com	r24
 df2:	90 95       	com	r25
 df4:	8e 0f       	add	r24, r30
 df6:	9f 1f       	adc	r25, r31
 df8:	08 95       	ret

00000dfa <fputc>:
 dfa:	0f 93       	push	r16
 dfc:	1f 93       	push	r17
 dfe:	cf 93       	push	r28
 e00:	df 93       	push	r29
 e02:	fb 01       	movw	r30, r22
 e04:	23 81       	ldd	r18, Z+3	; 0x03
 e06:	21 fd       	sbrc	r18, 1
 e08:	03 c0       	rjmp	.+6      	; 0xe10 <fputc+0x16>
 e0a:	8f ef       	ldi	r24, 0xFF	; 255
 e0c:	9f ef       	ldi	r25, 0xFF	; 255
 e0e:	2c c0       	rjmp	.+88     	; 0xe68 <fputc+0x6e>
 e10:	22 ff       	sbrs	r18, 2
 e12:	16 c0       	rjmp	.+44     	; 0xe40 <fputc+0x46>
 e14:	46 81       	ldd	r20, Z+6	; 0x06
 e16:	57 81       	ldd	r21, Z+7	; 0x07
 e18:	24 81       	ldd	r18, Z+4	; 0x04
 e1a:	35 81       	ldd	r19, Z+5	; 0x05
 e1c:	42 17       	cp	r20, r18
 e1e:	53 07       	cpc	r21, r19
 e20:	44 f4       	brge	.+16     	; 0xe32 <fputc+0x38>
 e22:	a0 81       	ld	r26, Z
 e24:	b1 81       	ldd	r27, Z+1	; 0x01
 e26:	9d 01       	movw	r18, r26
 e28:	2f 5f       	subi	r18, 0xFF	; 255
 e2a:	3f 4f       	sbci	r19, 0xFF	; 255
 e2c:	31 83       	std	Z+1, r19	; 0x01
 e2e:	20 83       	st	Z, r18
 e30:	8c 93       	st	X, r24
 e32:	26 81       	ldd	r18, Z+6	; 0x06
 e34:	37 81       	ldd	r19, Z+7	; 0x07
 e36:	2f 5f       	subi	r18, 0xFF	; 255
 e38:	3f 4f       	sbci	r19, 0xFF	; 255
 e3a:	37 83       	std	Z+7, r19	; 0x07
 e3c:	26 83       	std	Z+6, r18	; 0x06
 e3e:	14 c0       	rjmp	.+40     	; 0xe68 <fputc+0x6e>
 e40:	8b 01       	movw	r16, r22
 e42:	ec 01       	movw	r28, r24
 e44:	fb 01       	movw	r30, r22
 e46:	00 84       	ldd	r0, Z+8	; 0x08
 e48:	f1 85       	ldd	r31, Z+9	; 0x09
 e4a:	e0 2d       	mov	r30, r0
 e4c:	09 95       	icall
 e4e:	89 2b       	or	r24, r25
 e50:	e1 f6       	brne	.-72     	; 0xe0a <fputc+0x10>
 e52:	d8 01       	movw	r26, r16
 e54:	16 96       	adiw	r26, 0x06	; 6
 e56:	8d 91       	ld	r24, X+
 e58:	9c 91       	ld	r25, X
 e5a:	17 97       	sbiw	r26, 0x07	; 7
 e5c:	01 96       	adiw	r24, 0x01	; 1
 e5e:	17 96       	adiw	r26, 0x07	; 7
 e60:	9c 93       	st	X, r25
 e62:	8e 93       	st	-X, r24
 e64:	16 97       	sbiw	r26, 0x06	; 6
 e66:	ce 01       	movw	r24, r28
 e68:	df 91       	pop	r29
 e6a:	cf 91       	pop	r28
 e6c:	1f 91       	pop	r17
 e6e:	0f 91       	pop	r16
 e70:	08 95       	ret

00000e72 <__ultoa_invert>:
 e72:	fa 01       	movw	r30, r20
 e74:	aa 27       	eor	r26, r26
 e76:	28 30       	cpi	r18, 0x08	; 8
 e78:	51 f1       	breq	.+84     	; 0xece <__ultoa_invert+0x5c>
 e7a:	20 31       	cpi	r18, 0x10	; 16
 e7c:	81 f1       	breq	.+96     	; 0xede <__ultoa_invert+0x6c>
 e7e:	e8 94       	clt
 e80:	6f 93       	push	r22
 e82:	6e 7f       	andi	r22, 0xFE	; 254
 e84:	6e 5f       	subi	r22, 0xFE	; 254
 e86:	7f 4f       	sbci	r23, 0xFF	; 255
 e88:	8f 4f       	sbci	r24, 0xFF	; 255
 e8a:	9f 4f       	sbci	r25, 0xFF	; 255
 e8c:	af 4f       	sbci	r26, 0xFF	; 255
 e8e:	b1 e0       	ldi	r27, 0x01	; 1
 e90:	3e d0       	rcall	.+124    	; 0xf0e <__ultoa_invert+0x9c>
 e92:	b4 e0       	ldi	r27, 0x04	; 4
 e94:	3c d0       	rcall	.+120    	; 0xf0e <__ultoa_invert+0x9c>
 e96:	67 0f       	add	r22, r23
 e98:	78 1f       	adc	r23, r24
 e9a:	89 1f       	adc	r24, r25
 e9c:	9a 1f       	adc	r25, r26
 e9e:	a1 1d       	adc	r26, r1
 ea0:	68 0f       	add	r22, r24
 ea2:	79 1f       	adc	r23, r25
 ea4:	8a 1f       	adc	r24, r26
 ea6:	91 1d       	adc	r25, r1
 ea8:	a1 1d       	adc	r26, r1
 eaa:	6a 0f       	add	r22, r26
 eac:	71 1d       	adc	r23, r1
 eae:	81 1d       	adc	r24, r1
 eb0:	91 1d       	adc	r25, r1
 eb2:	a1 1d       	adc	r26, r1
 eb4:	20 d0       	rcall	.+64     	; 0xef6 <__ultoa_invert+0x84>
 eb6:	09 f4       	brne	.+2      	; 0xeba <__ultoa_invert+0x48>
 eb8:	68 94       	set
 eba:	3f 91       	pop	r19
 ebc:	2a e0       	ldi	r18, 0x0A	; 10
 ebe:	26 9f       	mul	r18, r22
 ec0:	11 24       	eor	r1, r1
 ec2:	30 19       	sub	r19, r0
 ec4:	30 5d       	subi	r19, 0xD0	; 208
 ec6:	31 93       	st	Z+, r19
 ec8:	de f6       	brtc	.-74     	; 0xe80 <__ultoa_invert+0xe>
 eca:	cf 01       	movw	r24, r30
 ecc:	08 95       	ret
 ece:	46 2f       	mov	r20, r22
 ed0:	47 70       	andi	r20, 0x07	; 7
 ed2:	40 5d       	subi	r20, 0xD0	; 208
 ed4:	41 93       	st	Z+, r20
 ed6:	b3 e0       	ldi	r27, 0x03	; 3
 ed8:	0f d0       	rcall	.+30     	; 0xef8 <__ultoa_invert+0x86>
 eda:	c9 f7       	brne	.-14     	; 0xece <__ultoa_invert+0x5c>
 edc:	f6 cf       	rjmp	.-20     	; 0xeca <__ultoa_invert+0x58>
 ede:	46 2f       	mov	r20, r22
 ee0:	4f 70       	andi	r20, 0x0F	; 15
 ee2:	40 5d       	subi	r20, 0xD0	; 208
 ee4:	4a 33       	cpi	r20, 0x3A	; 58
 ee6:	18 f0       	brcs	.+6      	; 0xeee <__ultoa_invert+0x7c>
 ee8:	49 5d       	subi	r20, 0xD9	; 217
 eea:	31 fd       	sbrc	r19, 1
 eec:	40 52       	subi	r20, 0x20	; 32
 eee:	41 93       	st	Z+, r20
 ef0:	02 d0       	rcall	.+4      	; 0xef6 <__ultoa_invert+0x84>
 ef2:	a9 f7       	brne	.-22     	; 0xede <__ultoa_invert+0x6c>
 ef4:	ea cf       	rjmp	.-44     	; 0xeca <__ultoa_invert+0x58>
 ef6:	b4 e0       	ldi	r27, 0x04	; 4
 ef8:	a6 95       	lsr	r26
 efa:	97 95       	ror	r25
 efc:	87 95       	ror	r24
 efe:	77 95       	ror	r23
 f00:	67 95       	ror	r22
 f02:	ba 95       	dec	r27
 f04:	c9 f7       	brne	.-14     	; 0xef8 <__ultoa_invert+0x86>
 f06:	00 97       	sbiw	r24, 0x00	; 0
 f08:	61 05       	cpc	r22, r1
 f0a:	71 05       	cpc	r23, r1
 f0c:	08 95       	ret
 f0e:	9b 01       	movw	r18, r22
 f10:	ac 01       	movw	r20, r24
 f12:	0a 2e       	mov	r0, r26
 f14:	06 94       	lsr	r0
 f16:	57 95       	ror	r21
 f18:	47 95       	ror	r20
 f1a:	37 95       	ror	r19
 f1c:	27 95       	ror	r18
 f1e:	ba 95       	dec	r27
 f20:	c9 f7       	brne	.-14     	; 0xf14 <__ultoa_invert+0xa2>
 f22:	62 0f       	add	r22, r18
 f24:	73 1f       	adc	r23, r19
 f26:	84 1f       	adc	r24, r20
 f28:	95 1f       	adc	r25, r21
 f2a:	a0 1d       	adc	r26, r0
 f2c:	08 95       	ret

00000f2e <_exit>:
 f2e:	f8 94       	cli

00000f30 <__stop_program>:
 f30:	ff cf       	rjmp	.-2      	; 0xf30 <__stop_program>
