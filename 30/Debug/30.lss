
30.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000005cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000578  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000005cc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005fc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000638  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000bee  00000000  00000000  000006a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000096f  00000000  00000000  0000128e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004c8  00000000  00000000  00001bfd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000108  00000000  00000000  000020c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004ab  00000000  00000000  000021d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003b2  00000000  00000000  0000267b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00002a2d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	eb c0       	rjmp	.+470    	; 0x220 <__vector_18>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	4d d0       	rcall	.+154    	; 0x134 <main>
  9a:	6c c2       	rjmp	.+1240   	; 0x574 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <ADC_set>:

void uart_string(char* str)
{
	while (*str)
	uart_write(*str++);
}
  9e:	80 e8       	ldi	r24, 0x80	; 128
  a0:	86 b9       	out	0x06, r24	; 6
  a2:	86 b1       	in	r24, 0x06	; 6
  a4:	87 60       	ori	r24, 0x07	; 7
  a6:	86 b9       	out	0x06, r24	; 6
  a8:	08 95       	ret

000000aa <ADC_read>:
  aa:	90 e4       	ldi	r25, 0x40	; 64
  ac:	97 b9       	out	0x07, r25	; 7
  ae:	97 b1       	in	r25, 0x07	; 7
  b0:	89 2b       	or	r24, r25
  b2:	87 b9       	out	0x07, r24	; 7
  b4:	36 9a       	sbi	0x06, 6	; 6
  b6:	36 99       	sbic	0x06, 6	; 6
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <ADC_read+0xc>
  ba:	84 b1       	in	r24, 0x04	; 4
  bc:	95 b1       	in	r25, 0x05	; 5
  be:	08 95       	ret

000000c0 <temp_sensor_read>:
  c0:	ee df       	rcall	.-36     	; 0x9e <ADC_set>
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	f2 df       	rcall	.-28     	; 0xaa <ADC_read>
  c6:	bc 01       	movw	r22, r24
  c8:	99 0f       	add	r25, r25
  ca:	88 0b       	sbc	r24, r24
  cc:	99 0b       	sbc	r25, r25
  ce:	3b d1       	rcall	.+630    	; 0x346 <__floatsisf>
  d0:	20 e0       	ldi	r18, 0x00	; 0
  d2:	30 e0       	ldi	r19, 0x00	; 0
  d4:	40 ea       	ldi	r20, 0xA0	; 160
  d6:	50 e4       	ldi	r21, 0x40	; 64
  d8:	c6 d1       	rcall	.+908    	; 0x466 <__mulsf3>
  da:	20 e0       	ldi	r18, 0x00	; 0
  dc:	30 ec       	ldi	r19, 0xC0	; 192
  de:	4f e7       	ldi	r20, 0x7F	; 127
  e0:	54 e4       	ldi	r21, 0x44	; 68
  e2:	c7 d0       	rcall	.+398    	; 0x272 <__divsf3>
  e4:	20 e0       	ldi	r18, 0x00	; 0
  e6:	30 e0       	ldi	r19, 0x00	; 0
  e8:	48 ec       	ldi	r20, 0xC8	; 200
  ea:	52 e4       	ldi	r21, 0x42	; 66
  ec:	bc c1       	rjmp	.+888    	; 0x466 <__mulsf3>

000000ee <gas_sensor_read>:
  ee:	d7 df       	rcall	.-82     	; 0x9e <ADC_set>
  f0:	82 e0       	ldi	r24, 0x02	; 2
  f2:	db df       	rcall	.-74     	; 0xaa <ADC_read>
  f4:	bc 01       	movw	r22, r24
  f6:	99 0f       	add	r25, r25
  f8:	88 0b       	sbc	r24, r24
  fa:	99 0b       	sbc	r25, r25
  fc:	24 d1       	rcall	.+584    	; 0x346 <__floatsisf>
  fe:	20 e0       	ldi	r18, 0x00	; 0
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	40 ea       	ldi	r20, 0xA0	; 160
 104:	50 e4       	ldi	r21, 0x40	; 64
 106:	af d1       	rcall	.+862    	; 0x466 <__mulsf3>
 108:	20 e0       	ldi	r18, 0x00	; 0
 10a:	30 ec       	ldi	r19, 0xC0	; 192
 10c:	4f e7       	ldi	r20, 0x7F	; 127
 10e:	54 e4       	ldi	r21, 0x44	; 68
 110:	b0 c0       	rjmp	.+352    	; 0x272 <__divsf3>

00000112 <fire_sensor_read>:
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	01 99       	sbic	0x00, 1	; 0
 118:	02 c0       	rjmp	.+4      	; 0x11e <fire_sensor_read+0xc>
 11a:	80 e0       	ldi	r24, 0x00	; 0
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	08 95       	ret

00000120 <uart_init>:
 120:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 124:	89 b9       	out	0x09, r24	; 9
 126:	88 e1       	ldi	r24, 0x18	; 24
 128:	8a b9       	out	0x0a, r24	; 10
 12a:	08 95       	ret

0000012c <uart_write>:
 12c:	5d 9b       	sbis	0x0b, 5	; 11
 12e:	fe cf       	rjmp	.-4      	; 0x12c <uart_write>
 130:	8c b9       	out	0x0c, r24	; 12
 132:	08 95       	ret

00000134 <main>:
#include "sensor.h"
#include "uart.h"

int main(void)
{
	DDRA = 0xFF; // 4bit LCD사용
 134:	8f ef       	ldi	r24, 0xFF	; 255
 136:	8a bb       	out	0x1a, r24	; 26
	DDRF = 0x00; // 가스, 불꽃, 온도센서 입력핀
 138:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    DDRC = 0xFF; // 부저, 팬모터, 릴레이 출력핀
 13c:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x04; // 평상시 포트 출력
 13e:	84 e0       	ldi	r24, 0x04	; 4
 140:	85 bb       	out	0x15, r24	; 21
	int state = 0;
	
	uart_init(BAUDRATE(9600)); // baudrate 설정
 142:	87 e6       	ldi	r24, 0x67	; 103
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	ec df       	rcall	.-40     	; 0x120 <uart_init>
	sei();
 148:	78 94       	sei
			PORTC = 0x04;
			break; 
			
			case 1: // 온도 or 가스 이상
			case 2:
			PORTC = 0x06;
 14a:	0f 2e       	mov	r0, r31
 14c:	f6 e0       	ldi	r31, 0x06	; 6
 14e:	bf 2e       	mov	r11, r31
 150:	f0 2d       	mov	r31, r0
			case 3: // 불꽃 이상
			PORTC = 0x04;
			break;
			
			case 4: // 화재
			PORTC = 0x01;
 152:	01 e0       	ldi	r16, 0x01	; 1
	float temp = 0, gas = 0;
	int temp_state = 0, gas_state = 0, fire_state = 0;
	
    while (1) 
    {
		float temp = temp_sensor_read();
 154:	14 e0       	ldi	r17, 0x04	; 4
 156:	b4 df       	rcall	.-152    	; 0xc0 <temp_sensor_read>
 158:	6b 01       	movw	r12, r22
 15a:	7c 01       	movw	r14, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 15c:	2f ef       	ldi	r18, 0xFF	; 255
 15e:	81 ee       	ldi	r24, 0xE1	; 225
 160:	94 e0       	ldi	r25, 0x04	; 4
 162:	21 50       	subi	r18, 0x01	; 1
 164:	80 40       	sbci	r24, 0x00	; 0
 166:	90 40       	sbci	r25, 0x00	; 0
 168:	e1 f7       	brne	.-8      	; 0x162 <main+0x2e>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <main+0x38>
		if(temp > 30.0) temp_state = 1; // 30도 이상일때
		else temp_state = 0;
		_delay_ms(100);
		
		float gas = gas_sensor_read();
 16c:	00 00       	nop
 16e:	bf df       	rcall	.-130    	; 0xee <gas_sensor_read>
 170:	2f ef       	ldi	r18, 0xFF	; 255
 172:	81 ee       	ldi	r24, 0xE1	; 225
 174:	94 e0       	ldi	r25, 0x04	; 4
 176:	21 50       	subi	r18, 0x01	; 1
 178:	80 40       	sbci	r24, 0x00	; 0
 17a:	90 40       	sbci	r25, 0x00	; 0
 17c:	e1 f7       	brne	.-8      	; 0x176 <main+0x42>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <main+0x4c>
		if(temp > 3.0) gas_state = 1; // 3.0이상일때
		else gas_state = 0;
		_delay_ms(100);
		
		int fire_state = fire_sensor_read();
 180:	00 00       	nop
 182:	c7 df       	rcall	.-114    	; 0x112 <fire_sensor_read>
 184:	ec 01       	movw	r28, r24
 186:	2f ef       	ldi	r18, 0xFF	; 255
 188:	81 ee       	ldi	r24, 0xE1	; 225
 18a:	94 e0       	ldi	r25, 0x04	; 4
 18c:	21 50       	subi	r18, 0x01	; 1
 18e:	80 40       	sbci	r24, 0x00	; 0
 190:	90 40       	sbci	r25, 0x00	; 0
 192:	e1 f7       	brne	.-8      	; 0x18c <main+0x58>
 194:	00 c0       	rjmp	.+0      	; 0x196 <main+0x62>
 196:	00 00       	nop
		_delay_ms(100);
		
		if(temp_state==0 && gas_state==0 && fire_state==0) state = 0; // 평상
 198:	20 e0       	ldi	r18, 0x00	; 0
 19a:	30 e0       	ldi	r19, 0x00	; 0
 19c:	40 ef       	ldi	r20, 0xF0	; 240
 19e:	51 e4       	ldi	r21, 0x41	; 65
 1a0:	c7 01       	movw	r24, r14
 1a2:	b6 01       	movw	r22, r12
 1a4:	5c d1       	rcall	.+696    	; 0x45e <__gesf2>
 1a6:	18 16       	cp	r1, r24
 1a8:	64 f0       	brlt	.+24     	; 0x1c2 <main+0x8e>
 1aa:	20 e0       	ldi	r18, 0x00	; 0
 1ac:	30 e0       	ldi	r19, 0x00	; 0
 1ae:	40 e4       	ldi	r20, 0x40	; 64
 1b0:	50 e4       	ldi	r21, 0x40	; 64
 1b2:	c7 01       	movw	r24, r14
 1b4:	b6 01       	movw	r22, r12
 1b6:	53 d1       	rcall	.+678    	; 0x45e <__gesf2>
 1b8:	18 16       	cp	r1, r24
 1ba:	dc f0       	brlt	.+54     	; 0x1f2 <main+0xbe>
 1bc:	20 97       	sbiw	r28, 0x00	; 0
 1be:	f9 f0       	breq	.+62     	; 0x1fe <main+0xca>
 1c0:	1b c0       	rjmp	.+54     	; 0x1f8 <main+0xc4>
		else if(temp_state==1 && gas_state==1 && fire_state==1) state = 4; // 화재
 1c2:	20 e0       	ldi	r18, 0x00	; 0
 1c4:	30 e0       	ldi	r19, 0x00	; 0
 1c6:	40 e4       	ldi	r20, 0x40	; 64
 1c8:	50 e4       	ldi	r21, 0x40	; 64
 1ca:	c7 01       	movw	r24, r14
 1cc:	b6 01       	movw	r22, r12
 1ce:	47 d1       	rcall	.+654    	; 0x45e <__gesf2>
 1d0:	18 16       	cp	r1, r24
 1d2:	1c f4       	brge	.+6      	; 0x1da <main+0xa6>
 1d4:	21 97       	sbiw	r28, 0x01	; 1
 1d6:	d1 f4       	brne	.+52     	; 0x20c <main+0xd8>
		else if(temp_state==1 && gas_state==0 && fire_state==0) state = 1; // 온도
 1d8:	18 c0       	rjmp	.+48     	; 0x20a <main+0xd6>
 1da:	20 e0       	ldi	r18, 0x00	; 0
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	40 e4       	ldi	r20, 0x40	; 64
 1e0:	50 e4       	ldi	r21, 0x40	; 64
 1e2:	c7 01       	movw	r24, r14
 1e4:	b6 01       	movw	r22, r12
 1e6:	3b d1       	rcall	.+630    	; 0x45e <__gesf2>
 1e8:	18 16       	cp	r1, r24
 1ea:	84 f0       	brlt	.+32     	; 0x20c <main+0xd8>
 1ec:	cd 2b       	or	r28, r29
 1ee:	49 f0       	breq	.+18     	; 0x202 <main+0xce>
 1f0:	0d c0       	rjmp	.+26     	; 0x20c <main+0xd8>
		else if(temp_state==0 && gas_state==1 && fire_state==0) state = 2; // 가스
 1f2:	cd 2b       	or	r28, r29
 1f4:	31 f0       	breq	.+12     	; 0x202 <main+0xce>
 1f6:	0a c0       	rjmp	.+20     	; 0x20c <main+0xd8>
		else if(temp_state==0 && gas_state==0 && fire_state==1) state = 3; // 불꽃
 1f8:	21 97       	sbiw	r28, 0x01	; 1
 1fa:	41 f4       	brne	.+16     	; 0x20c <main+0xd8>
 1fc:	04 c0       	rjmp	.+8      	; 0x206 <main+0xd2>
		else state = 5;
		
		switch(state)
		{
			case 0: // 평상
			PORTC = 0x04;
 1fe:	15 bb       	out	0x15, r17	; 21
			break; 
 200:	05 c0       	rjmp	.+10     	; 0x20c <main+0xd8>
			
			case 1: // 온도 or 가스 이상
			case 2:
			PORTC = 0x06;
 202:	b5 ba       	out	0x15, r11	; 21
			break;
 204:	03 c0       	rjmp	.+6      	; 0x20c <main+0xd8>
			
			case 3: // 불꽃 이상
			PORTC = 0x04;
 206:	15 bb       	out	0x15, r17	; 21
			break;
 208:	01 c0       	rjmp	.+2      	; 0x20c <main+0xd8>
			
			case 4: // 화재
			PORTC = 0x01;
 20a:	05 bb       	out	0x15, r16	; 21
 20c:	2f ef       	ldi	r18, 0xFF	; 255
 20e:	89 e6       	ldi	r24, 0x69	; 105
 210:	98 e1       	ldi	r25, 0x18	; 24
 212:	21 50       	subi	r18, 0x01	; 1
 214:	80 40       	sbci	r24, 0x00	; 0
 216:	90 40       	sbci	r25, 0x00	; 0
 218:	e1 f7       	brne	.-8      	; 0x212 <main+0xde>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <main+0xe8>
 21c:	00 00       	nop
 21e:	9b cf       	rjmp	.-202    	; 0x156 <main+0x22>

00000220 <__vector_18>:
		_delay_ms(500); // 0.5초마다 측정
    }
}

ISR(USART0_RX_vect) // uart에 들어온 값이 있을 때 실행
{
 220:	1f 92       	push	r1
 222:	0f 92       	push	r0
 224:	0f b6       	in	r0, 0x3f	; 63
 226:	0f 92       	push	r0
 228:	11 24       	eor	r1, r1
 22a:	0b b6       	in	r0, 0x3b	; 59
 22c:	0f 92       	push	r0
 22e:	2f 93       	push	r18
 230:	3f 93       	push	r19
 232:	4f 93       	push	r20
 234:	5f 93       	push	r21
 236:	6f 93       	push	r22
 238:	7f 93       	push	r23
 23a:	8f 93       	push	r24
 23c:	9f 93       	push	r25
 23e:	af 93       	push	r26
 240:	bf 93       	push	r27
 242:	ef 93       	push	r30
 244:	ff 93       	push	r31
	unsigned char buff = UDR0; // UDR0에 레지스터에 데이터가 저장이 된다.
 246:	8c b1       	in	r24, 0x0c	; 12
	uart_write(buff - 'a' + 'A'); // 소문자->대문자로 전송
 248:	80 52       	subi	r24, 0x20	; 32
 24a:	70 df       	rcall	.-288    	; 0x12c <uart_write>
 24c:	ff 91       	pop	r31
 24e:	ef 91       	pop	r30
 250:	bf 91       	pop	r27
 252:	af 91       	pop	r26
 254:	9f 91       	pop	r25
 256:	8f 91       	pop	r24
 258:	7f 91       	pop	r23
 25a:	6f 91       	pop	r22
 25c:	5f 91       	pop	r21
 25e:	4f 91       	pop	r20
 260:	3f 91       	pop	r19
 262:	2f 91       	pop	r18
 264:	0f 90       	pop	r0
 266:	0b be       	out	0x3b, r0	; 59
 268:	0f 90       	pop	r0
 26a:	0f be       	out	0x3f, r0	; 63
 26c:	0f 90       	pop	r0
 26e:	1f 90       	pop	r1
 270:	18 95       	reti

00000272 <__divsf3>:
 272:	0c d0       	rcall	.+24     	; 0x28c <__divsf3x>
 274:	ba c0       	rjmp	.+372    	; 0x3ea <__fp_round>
 276:	b2 d0       	rcall	.+356    	; 0x3dc <__fp_pscB>
 278:	40 f0       	brcs	.+16     	; 0x28a <__divsf3+0x18>
 27a:	a9 d0       	rcall	.+338    	; 0x3ce <__fp_pscA>
 27c:	30 f0       	brcs	.+12     	; 0x28a <__divsf3+0x18>
 27e:	21 f4       	brne	.+8      	; 0x288 <__divsf3+0x16>
 280:	5f 3f       	cpi	r21, 0xFF	; 255
 282:	19 f0       	breq	.+6      	; 0x28a <__divsf3+0x18>
 284:	9b c0       	rjmp	.+310    	; 0x3bc <__fp_inf>
 286:	51 11       	cpse	r21, r1
 288:	e4 c0       	rjmp	.+456    	; 0x452 <__fp_szero>
 28a:	9e c0       	rjmp	.+316    	; 0x3c8 <__fp_nan>

0000028c <__divsf3x>:
 28c:	bf d0       	rcall	.+382    	; 0x40c <__fp_split3>
 28e:	98 f3       	brcs	.-26     	; 0x276 <__divsf3+0x4>

00000290 <__divsf3_pse>:
 290:	99 23       	and	r25, r25
 292:	c9 f3       	breq	.-14     	; 0x286 <__divsf3+0x14>
 294:	55 23       	and	r21, r21
 296:	b1 f3       	breq	.-20     	; 0x284 <__divsf3+0x12>
 298:	95 1b       	sub	r25, r21
 29a:	55 0b       	sbc	r21, r21
 29c:	bb 27       	eor	r27, r27
 29e:	aa 27       	eor	r26, r26
 2a0:	62 17       	cp	r22, r18
 2a2:	73 07       	cpc	r23, r19
 2a4:	84 07       	cpc	r24, r20
 2a6:	38 f0       	brcs	.+14     	; 0x2b6 <__divsf3_pse+0x26>
 2a8:	9f 5f       	subi	r25, 0xFF	; 255
 2aa:	5f 4f       	sbci	r21, 0xFF	; 255
 2ac:	22 0f       	add	r18, r18
 2ae:	33 1f       	adc	r19, r19
 2b0:	44 1f       	adc	r20, r20
 2b2:	aa 1f       	adc	r26, r26
 2b4:	a9 f3       	breq	.-22     	; 0x2a0 <__divsf3_pse+0x10>
 2b6:	33 d0       	rcall	.+102    	; 0x31e <__divsf3_pse+0x8e>
 2b8:	0e 2e       	mov	r0, r30
 2ba:	3a f0       	brmi	.+14     	; 0x2ca <__divsf3_pse+0x3a>
 2bc:	e0 e8       	ldi	r30, 0x80	; 128
 2be:	30 d0       	rcall	.+96     	; 0x320 <__divsf3_pse+0x90>
 2c0:	91 50       	subi	r25, 0x01	; 1
 2c2:	50 40       	sbci	r21, 0x00	; 0
 2c4:	e6 95       	lsr	r30
 2c6:	00 1c       	adc	r0, r0
 2c8:	ca f7       	brpl	.-14     	; 0x2bc <__divsf3_pse+0x2c>
 2ca:	29 d0       	rcall	.+82     	; 0x31e <__divsf3_pse+0x8e>
 2cc:	fe 2f       	mov	r31, r30
 2ce:	27 d0       	rcall	.+78     	; 0x31e <__divsf3_pse+0x8e>
 2d0:	66 0f       	add	r22, r22
 2d2:	77 1f       	adc	r23, r23
 2d4:	88 1f       	adc	r24, r24
 2d6:	bb 1f       	adc	r27, r27
 2d8:	26 17       	cp	r18, r22
 2da:	37 07       	cpc	r19, r23
 2dc:	48 07       	cpc	r20, r24
 2de:	ab 07       	cpc	r26, r27
 2e0:	b0 e8       	ldi	r27, 0x80	; 128
 2e2:	09 f0       	breq	.+2      	; 0x2e6 <__divsf3_pse+0x56>
 2e4:	bb 0b       	sbc	r27, r27
 2e6:	80 2d       	mov	r24, r0
 2e8:	bf 01       	movw	r22, r30
 2ea:	ff 27       	eor	r31, r31
 2ec:	93 58       	subi	r25, 0x83	; 131
 2ee:	5f 4f       	sbci	r21, 0xFF	; 255
 2f0:	2a f0       	brmi	.+10     	; 0x2fc <__divsf3_pse+0x6c>
 2f2:	9e 3f       	cpi	r25, 0xFE	; 254
 2f4:	51 05       	cpc	r21, r1
 2f6:	68 f0       	brcs	.+26     	; 0x312 <__divsf3_pse+0x82>
 2f8:	61 c0       	rjmp	.+194    	; 0x3bc <__fp_inf>
 2fa:	ab c0       	rjmp	.+342    	; 0x452 <__fp_szero>
 2fc:	5f 3f       	cpi	r21, 0xFF	; 255
 2fe:	ec f3       	brlt	.-6      	; 0x2fa <__divsf3_pse+0x6a>
 300:	98 3e       	cpi	r25, 0xE8	; 232
 302:	dc f3       	brlt	.-10     	; 0x2fa <__divsf3_pse+0x6a>
 304:	86 95       	lsr	r24
 306:	77 95       	ror	r23
 308:	67 95       	ror	r22
 30a:	b7 95       	ror	r27
 30c:	f7 95       	ror	r31
 30e:	9f 5f       	subi	r25, 0xFF	; 255
 310:	c9 f7       	brne	.-14     	; 0x304 <__divsf3_pse+0x74>
 312:	88 0f       	add	r24, r24
 314:	91 1d       	adc	r25, r1
 316:	96 95       	lsr	r25
 318:	87 95       	ror	r24
 31a:	97 f9       	bld	r25, 7
 31c:	08 95       	ret
 31e:	e1 e0       	ldi	r30, 0x01	; 1
 320:	66 0f       	add	r22, r22
 322:	77 1f       	adc	r23, r23
 324:	88 1f       	adc	r24, r24
 326:	bb 1f       	adc	r27, r27
 328:	62 17       	cp	r22, r18
 32a:	73 07       	cpc	r23, r19
 32c:	84 07       	cpc	r24, r20
 32e:	ba 07       	cpc	r27, r26
 330:	20 f0       	brcs	.+8      	; 0x33a <__divsf3_pse+0xaa>
 332:	62 1b       	sub	r22, r18
 334:	73 0b       	sbc	r23, r19
 336:	84 0b       	sbc	r24, r20
 338:	ba 0b       	sbc	r27, r26
 33a:	ee 1f       	adc	r30, r30
 33c:	88 f7       	brcc	.-30     	; 0x320 <__divsf3_pse+0x90>
 33e:	e0 95       	com	r30
 340:	08 95       	ret

00000342 <__floatunsisf>:
 342:	e8 94       	clt
 344:	09 c0       	rjmp	.+18     	; 0x358 <__floatsisf+0x12>

00000346 <__floatsisf>:
 346:	97 fb       	bst	r25, 7
 348:	3e f4       	brtc	.+14     	; 0x358 <__floatsisf+0x12>
 34a:	90 95       	com	r25
 34c:	80 95       	com	r24
 34e:	70 95       	com	r23
 350:	61 95       	neg	r22
 352:	7f 4f       	sbci	r23, 0xFF	; 255
 354:	8f 4f       	sbci	r24, 0xFF	; 255
 356:	9f 4f       	sbci	r25, 0xFF	; 255
 358:	99 23       	and	r25, r25
 35a:	a9 f0       	breq	.+42     	; 0x386 <__floatsisf+0x40>
 35c:	f9 2f       	mov	r31, r25
 35e:	96 e9       	ldi	r25, 0x96	; 150
 360:	bb 27       	eor	r27, r27
 362:	93 95       	inc	r25
 364:	f6 95       	lsr	r31
 366:	87 95       	ror	r24
 368:	77 95       	ror	r23
 36a:	67 95       	ror	r22
 36c:	b7 95       	ror	r27
 36e:	f1 11       	cpse	r31, r1
 370:	f8 cf       	rjmp	.-16     	; 0x362 <__floatsisf+0x1c>
 372:	fa f4       	brpl	.+62     	; 0x3b2 <__floatsisf+0x6c>
 374:	bb 0f       	add	r27, r27
 376:	11 f4       	brne	.+4      	; 0x37c <__floatsisf+0x36>
 378:	60 ff       	sbrs	r22, 0
 37a:	1b c0       	rjmp	.+54     	; 0x3b2 <__floatsisf+0x6c>
 37c:	6f 5f       	subi	r22, 0xFF	; 255
 37e:	7f 4f       	sbci	r23, 0xFF	; 255
 380:	8f 4f       	sbci	r24, 0xFF	; 255
 382:	9f 4f       	sbci	r25, 0xFF	; 255
 384:	16 c0       	rjmp	.+44     	; 0x3b2 <__floatsisf+0x6c>
 386:	88 23       	and	r24, r24
 388:	11 f0       	breq	.+4      	; 0x38e <__floatsisf+0x48>
 38a:	96 e9       	ldi	r25, 0x96	; 150
 38c:	11 c0       	rjmp	.+34     	; 0x3b0 <__floatsisf+0x6a>
 38e:	77 23       	and	r23, r23
 390:	21 f0       	breq	.+8      	; 0x39a <__floatsisf+0x54>
 392:	9e e8       	ldi	r25, 0x8E	; 142
 394:	87 2f       	mov	r24, r23
 396:	76 2f       	mov	r23, r22
 398:	05 c0       	rjmp	.+10     	; 0x3a4 <__floatsisf+0x5e>
 39a:	66 23       	and	r22, r22
 39c:	71 f0       	breq	.+28     	; 0x3ba <__floatsisf+0x74>
 39e:	96 e8       	ldi	r25, 0x86	; 134
 3a0:	86 2f       	mov	r24, r22
 3a2:	70 e0       	ldi	r23, 0x00	; 0
 3a4:	60 e0       	ldi	r22, 0x00	; 0
 3a6:	2a f0       	brmi	.+10     	; 0x3b2 <__floatsisf+0x6c>
 3a8:	9a 95       	dec	r25
 3aa:	66 0f       	add	r22, r22
 3ac:	77 1f       	adc	r23, r23
 3ae:	88 1f       	adc	r24, r24
 3b0:	da f7       	brpl	.-10     	; 0x3a8 <__floatsisf+0x62>
 3b2:	88 0f       	add	r24, r24
 3b4:	96 95       	lsr	r25
 3b6:	87 95       	ror	r24
 3b8:	97 f9       	bld	r25, 7
 3ba:	08 95       	ret

000003bc <__fp_inf>:
 3bc:	97 f9       	bld	r25, 7
 3be:	9f 67       	ori	r25, 0x7F	; 127
 3c0:	80 e8       	ldi	r24, 0x80	; 128
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	60 e0       	ldi	r22, 0x00	; 0
 3c6:	08 95       	ret

000003c8 <__fp_nan>:
 3c8:	9f ef       	ldi	r25, 0xFF	; 255
 3ca:	80 ec       	ldi	r24, 0xC0	; 192
 3cc:	08 95       	ret

000003ce <__fp_pscA>:
 3ce:	00 24       	eor	r0, r0
 3d0:	0a 94       	dec	r0
 3d2:	16 16       	cp	r1, r22
 3d4:	17 06       	cpc	r1, r23
 3d6:	18 06       	cpc	r1, r24
 3d8:	09 06       	cpc	r0, r25
 3da:	08 95       	ret

000003dc <__fp_pscB>:
 3dc:	00 24       	eor	r0, r0
 3de:	0a 94       	dec	r0
 3e0:	12 16       	cp	r1, r18
 3e2:	13 06       	cpc	r1, r19
 3e4:	14 06       	cpc	r1, r20
 3e6:	05 06       	cpc	r0, r21
 3e8:	08 95       	ret

000003ea <__fp_round>:
 3ea:	09 2e       	mov	r0, r25
 3ec:	03 94       	inc	r0
 3ee:	00 0c       	add	r0, r0
 3f0:	11 f4       	brne	.+4      	; 0x3f6 <__fp_round+0xc>
 3f2:	88 23       	and	r24, r24
 3f4:	52 f0       	brmi	.+20     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3f6:	bb 0f       	add	r27, r27
 3f8:	40 f4       	brcc	.+16     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3fa:	bf 2b       	or	r27, r31
 3fc:	11 f4       	brne	.+4      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3fe:	60 ff       	sbrs	r22, 0
 400:	04 c0       	rjmp	.+8      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 402:	6f 5f       	subi	r22, 0xFF	; 255
 404:	7f 4f       	sbci	r23, 0xFF	; 255
 406:	8f 4f       	sbci	r24, 0xFF	; 255
 408:	9f 4f       	sbci	r25, 0xFF	; 255
 40a:	08 95       	ret

0000040c <__fp_split3>:
 40c:	57 fd       	sbrc	r21, 7
 40e:	90 58       	subi	r25, 0x80	; 128
 410:	44 0f       	add	r20, r20
 412:	55 1f       	adc	r21, r21
 414:	59 f0       	breq	.+22     	; 0x42c <__fp_splitA+0x10>
 416:	5f 3f       	cpi	r21, 0xFF	; 255
 418:	71 f0       	breq	.+28     	; 0x436 <__fp_splitA+0x1a>
 41a:	47 95       	ror	r20

0000041c <__fp_splitA>:
 41c:	88 0f       	add	r24, r24
 41e:	97 fb       	bst	r25, 7
 420:	99 1f       	adc	r25, r25
 422:	61 f0       	breq	.+24     	; 0x43c <__fp_splitA+0x20>
 424:	9f 3f       	cpi	r25, 0xFF	; 255
 426:	79 f0       	breq	.+30     	; 0x446 <__fp_splitA+0x2a>
 428:	87 95       	ror	r24
 42a:	08 95       	ret
 42c:	12 16       	cp	r1, r18
 42e:	13 06       	cpc	r1, r19
 430:	14 06       	cpc	r1, r20
 432:	55 1f       	adc	r21, r21
 434:	f2 cf       	rjmp	.-28     	; 0x41a <__fp_split3+0xe>
 436:	46 95       	lsr	r20
 438:	f1 df       	rcall	.-30     	; 0x41c <__fp_splitA>
 43a:	08 c0       	rjmp	.+16     	; 0x44c <__fp_splitA+0x30>
 43c:	16 16       	cp	r1, r22
 43e:	17 06       	cpc	r1, r23
 440:	18 06       	cpc	r1, r24
 442:	99 1f       	adc	r25, r25
 444:	f1 cf       	rjmp	.-30     	; 0x428 <__fp_splitA+0xc>
 446:	86 95       	lsr	r24
 448:	71 05       	cpc	r23, r1
 44a:	61 05       	cpc	r22, r1
 44c:	08 94       	sec
 44e:	08 95       	ret

00000450 <__fp_zero>:
 450:	e8 94       	clt

00000452 <__fp_szero>:
 452:	bb 27       	eor	r27, r27
 454:	66 27       	eor	r22, r22
 456:	77 27       	eor	r23, r23
 458:	cb 01       	movw	r24, r22
 45a:	97 f9       	bld	r25, 7
 45c:	08 95       	ret

0000045e <__gesf2>:
 45e:	66 d0       	rcall	.+204    	; 0x52c <__fp_cmp>
 460:	08 f4       	brcc	.+2      	; 0x464 <__gesf2+0x6>
 462:	8f ef       	ldi	r24, 0xFF	; 255
 464:	08 95       	ret

00000466 <__mulsf3>:
 466:	0b d0       	rcall	.+22     	; 0x47e <__mulsf3x>
 468:	c0 cf       	rjmp	.-128    	; 0x3ea <__fp_round>
 46a:	b1 df       	rcall	.-158    	; 0x3ce <__fp_pscA>
 46c:	28 f0       	brcs	.+10     	; 0x478 <__mulsf3+0x12>
 46e:	b6 df       	rcall	.-148    	; 0x3dc <__fp_pscB>
 470:	18 f0       	brcs	.+6      	; 0x478 <__mulsf3+0x12>
 472:	95 23       	and	r25, r21
 474:	09 f0       	breq	.+2      	; 0x478 <__mulsf3+0x12>
 476:	a2 cf       	rjmp	.-188    	; 0x3bc <__fp_inf>
 478:	a7 cf       	rjmp	.-178    	; 0x3c8 <__fp_nan>
 47a:	11 24       	eor	r1, r1
 47c:	ea cf       	rjmp	.-44     	; 0x452 <__fp_szero>

0000047e <__mulsf3x>:
 47e:	c6 df       	rcall	.-116    	; 0x40c <__fp_split3>
 480:	a0 f3       	brcs	.-24     	; 0x46a <__mulsf3+0x4>

00000482 <__mulsf3_pse>:
 482:	95 9f       	mul	r25, r21
 484:	d1 f3       	breq	.-12     	; 0x47a <__mulsf3+0x14>
 486:	95 0f       	add	r25, r21
 488:	50 e0       	ldi	r21, 0x00	; 0
 48a:	55 1f       	adc	r21, r21
 48c:	62 9f       	mul	r22, r18
 48e:	f0 01       	movw	r30, r0
 490:	72 9f       	mul	r23, r18
 492:	bb 27       	eor	r27, r27
 494:	f0 0d       	add	r31, r0
 496:	b1 1d       	adc	r27, r1
 498:	63 9f       	mul	r22, r19
 49a:	aa 27       	eor	r26, r26
 49c:	f0 0d       	add	r31, r0
 49e:	b1 1d       	adc	r27, r1
 4a0:	aa 1f       	adc	r26, r26
 4a2:	64 9f       	mul	r22, r20
 4a4:	66 27       	eor	r22, r22
 4a6:	b0 0d       	add	r27, r0
 4a8:	a1 1d       	adc	r26, r1
 4aa:	66 1f       	adc	r22, r22
 4ac:	82 9f       	mul	r24, r18
 4ae:	22 27       	eor	r18, r18
 4b0:	b0 0d       	add	r27, r0
 4b2:	a1 1d       	adc	r26, r1
 4b4:	62 1f       	adc	r22, r18
 4b6:	73 9f       	mul	r23, r19
 4b8:	b0 0d       	add	r27, r0
 4ba:	a1 1d       	adc	r26, r1
 4bc:	62 1f       	adc	r22, r18
 4be:	83 9f       	mul	r24, r19
 4c0:	a0 0d       	add	r26, r0
 4c2:	61 1d       	adc	r22, r1
 4c4:	22 1f       	adc	r18, r18
 4c6:	74 9f       	mul	r23, r20
 4c8:	33 27       	eor	r19, r19
 4ca:	a0 0d       	add	r26, r0
 4cc:	61 1d       	adc	r22, r1
 4ce:	23 1f       	adc	r18, r19
 4d0:	84 9f       	mul	r24, r20
 4d2:	60 0d       	add	r22, r0
 4d4:	21 1d       	adc	r18, r1
 4d6:	82 2f       	mov	r24, r18
 4d8:	76 2f       	mov	r23, r22
 4da:	6a 2f       	mov	r22, r26
 4dc:	11 24       	eor	r1, r1
 4de:	9f 57       	subi	r25, 0x7F	; 127
 4e0:	50 40       	sbci	r21, 0x00	; 0
 4e2:	8a f0       	brmi	.+34     	; 0x506 <__mulsf3_pse+0x84>
 4e4:	e1 f0       	breq	.+56     	; 0x51e <__mulsf3_pse+0x9c>
 4e6:	88 23       	and	r24, r24
 4e8:	4a f0       	brmi	.+18     	; 0x4fc <__mulsf3_pse+0x7a>
 4ea:	ee 0f       	add	r30, r30
 4ec:	ff 1f       	adc	r31, r31
 4ee:	bb 1f       	adc	r27, r27
 4f0:	66 1f       	adc	r22, r22
 4f2:	77 1f       	adc	r23, r23
 4f4:	88 1f       	adc	r24, r24
 4f6:	91 50       	subi	r25, 0x01	; 1
 4f8:	50 40       	sbci	r21, 0x00	; 0
 4fa:	a9 f7       	brne	.-22     	; 0x4e6 <__mulsf3_pse+0x64>
 4fc:	9e 3f       	cpi	r25, 0xFE	; 254
 4fe:	51 05       	cpc	r21, r1
 500:	70 f0       	brcs	.+28     	; 0x51e <__mulsf3_pse+0x9c>
 502:	5c cf       	rjmp	.-328    	; 0x3bc <__fp_inf>
 504:	a6 cf       	rjmp	.-180    	; 0x452 <__fp_szero>
 506:	5f 3f       	cpi	r21, 0xFF	; 255
 508:	ec f3       	brlt	.-6      	; 0x504 <__mulsf3_pse+0x82>
 50a:	98 3e       	cpi	r25, 0xE8	; 232
 50c:	dc f3       	brlt	.-10     	; 0x504 <__mulsf3_pse+0x82>
 50e:	86 95       	lsr	r24
 510:	77 95       	ror	r23
 512:	67 95       	ror	r22
 514:	b7 95       	ror	r27
 516:	f7 95       	ror	r31
 518:	e7 95       	ror	r30
 51a:	9f 5f       	subi	r25, 0xFF	; 255
 51c:	c1 f7       	brne	.-16     	; 0x50e <__mulsf3_pse+0x8c>
 51e:	fe 2b       	or	r31, r30
 520:	88 0f       	add	r24, r24
 522:	91 1d       	adc	r25, r1
 524:	96 95       	lsr	r25
 526:	87 95       	ror	r24
 528:	97 f9       	bld	r25, 7
 52a:	08 95       	ret

0000052c <__fp_cmp>:
 52c:	99 0f       	add	r25, r25
 52e:	00 08       	sbc	r0, r0
 530:	55 0f       	add	r21, r21
 532:	aa 0b       	sbc	r26, r26
 534:	e0 e8       	ldi	r30, 0x80	; 128
 536:	fe ef       	ldi	r31, 0xFE	; 254
 538:	16 16       	cp	r1, r22
 53a:	17 06       	cpc	r1, r23
 53c:	e8 07       	cpc	r30, r24
 53e:	f9 07       	cpc	r31, r25
 540:	c0 f0       	brcs	.+48     	; 0x572 <__fp_cmp+0x46>
 542:	12 16       	cp	r1, r18
 544:	13 06       	cpc	r1, r19
 546:	e4 07       	cpc	r30, r20
 548:	f5 07       	cpc	r31, r21
 54a:	98 f0       	brcs	.+38     	; 0x572 <__fp_cmp+0x46>
 54c:	62 1b       	sub	r22, r18
 54e:	73 0b       	sbc	r23, r19
 550:	84 0b       	sbc	r24, r20
 552:	95 0b       	sbc	r25, r21
 554:	39 f4       	brne	.+14     	; 0x564 <__fp_cmp+0x38>
 556:	0a 26       	eor	r0, r26
 558:	61 f0       	breq	.+24     	; 0x572 <__fp_cmp+0x46>
 55a:	23 2b       	or	r18, r19
 55c:	24 2b       	or	r18, r20
 55e:	25 2b       	or	r18, r21
 560:	21 f4       	brne	.+8      	; 0x56a <__fp_cmp+0x3e>
 562:	08 95       	ret
 564:	0a 26       	eor	r0, r26
 566:	09 f4       	brne	.+2      	; 0x56a <__fp_cmp+0x3e>
 568:	a1 40       	sbci	r26, 0x01	; 1
 56a:	a6 95       	lsr	r26
 56c:	8f ef       	ldi	r24, 0xFF	; 255
 56e:	81 1d       	adc	r24, r1
 570:	81 1d       	adc	r24, r1
 572:	08 95       	ret

00000574 <_exit>:
 574:	f8 94       	cli

00000576 <__stop_program>:
 576:	ff cf       	rjmp	.-2      	; 0x576 <__stop_program>
